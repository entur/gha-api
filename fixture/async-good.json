{
  "asyncapi": "3.0.0",
  "info": {
    "title": "Item Processing Service",
    "version": "1.0.0",
    "description": "A long and descriptive description",
    "contact": {
      "name": "API Support",
      "url": "https://entur.no",
      "email": "support@entur.no"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "tags": [
      {"name": "Tag"}
    ]
  },
  "servers": {
    "kafka": {
      "host": "test.mykafkacluster.org:8092",
      "protocol": "kafka",
      "bindings": {
        "kafka": {
          "schemaRegistryUrl": "http://localhost:8080/apis/registry/",
          "schemaRegistryVendor": "apicurio",
          "bindingVersion": "0.5.0"
        }
      }
    }
  },
  "channels": {
    "items/incoming": {
      "address": "items-incoming",
      "description": "Channel for receiving incoming items",
      "messages": {
        "itemMessage": {
          "$ref": "#/components/messages/ItemMessage"
        }
      },
      "servers": [
        {
          "$ref": "#/servers/kafka"
        }
      ]
    }
  },
  "operations": {
    "receiveItems": {
      "action": "receive",
      "description": "Receive an item",
      "channel": {
        "$ref": "#/channels/items~1incoming"
      },
      "bindings": {
        "kafka": {
          "bindingVersion": "0.5.0",
          "groupId": {
            "type": "string",
            "enum": ["myGroupId"]
          },
          "clientId": {
            "type": "string",
            "enum": ["myClientId"]
          }
        }
      },
      "messages": [
        {
          "$ref": "#/channels/items~1incoming/messages/itemMessage"
        }
      ]
    }
  },
  "components": {
    "messages": {
      "ItemMessage": {
        "bindings": {
          "kafka": {
            "key": {
              "type": "string",
              "example": "item-key"
            },
            "schemaIdLocation": "payload",
            "schemaIdPayloadEncoding": "apicurio-newline",
            "schemaLookupStrategy": "TopicIdStrategy",
            "bindingVersion": "0.5.0"
          }
        },
        "payload": {
          "$ref": "#/components/schemas/Item"
        }
      }
    },
    "schemas": {
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "100"
          },
          "name": {
            "type": "string",
            "example": "Item 100"
          }
        },
        "example": {
          "id": "100",
          "name": "Item 100"
        }
      }
    }
  }
}