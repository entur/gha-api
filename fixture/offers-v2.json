{
  "openapi": "3.1.0",
  "info": {
    "description": "Search for offers by different means",
    "title": "Offers",
    "version": "2.0",
    "contact": {
      "name": "Team Tilbud",
      "email": "teamtilbud@entur.org"
    }
  },
  "externalDocs": {
    "description": "Entur developer documentation",
    "url": "https://developer.entur.org/pages-offers-docs-intro"
  },
  "tags": [
    {
      "name": "external",
      "description": "Endpoints that are available for external clients"
    },
    {
      "name": "internal",
      "description": "Endpoints that are available for internal clients"
    },
    {
      "name": "offline",
      "description": "Endpoints that are available for offline clients"
    }
  ],
  "servers": [
    {
      "url": "https://api.entur.io",
      "description": "Production environment"
    },
    {
      "url": "https://api.staging.entur.io",
      "description": "Staging environment"
    },
    {
      "url": "https://api.dev.entur.io",
      "description": "Development environment"
    }
  ],
  "paths": {
    "/offers/v2/search/trip-pattern": {
      "post": {
        "summary": "Search trip pattern",
        "operationId": "post-offers-v2-search-trip-pattern",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "description": "Request offers for a specific departure between two stop places. At least one Traveller, and a TripPatternRequest is required.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTripPatternRequest"
              }
            }
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AuthorizationHeader" },
          { "$ref": "#/components/parameters/AcceptLanguageHeader" },
          { "$ref": "#/components/parameters/ET-ClientHeader" },
          { "$ref": "#/components/parameters/CorrelationIdHeader" },
          { "$ref": "#/components/parameters/LogLevelHeader" },
          { "$ref": "#/components/parameters/DistributionChannelHeader" },
          { "$ref": "#/components/parameters/POS-Header" },
          { "$ref": "#/components/parameters/ResponseTypeHeader" },
          { "$ref": "#/components/parameters/SkipOffersCachingHeader"}
        ],
        "tags": [
          "external"
        ]
      }
    },
    "/offers/v2/search/stop-places": {
      "post": {
        "summary": "Search for offers by stop places",
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "description": "Request offers that are not associated with any specific departure. The offers returned are period tickets or single tickets that are valid between stop places and for a given duration. Some combinations of stop places may result in offers that cover parts of the distance. As an example, let's say the \"from\" stop place is A, and the \"to\" stop place is C. There may not be a ticket that is valid from A to C, but tickets that are valid from A to B, and B to C. In that case you will receive offers that are valid for A to B and B to C. If you only want offers that cover the whole distance, set \"offersForWholeTripOnly\" to true.",
        "operationId": "post-offers-v2-search-stop-places",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchStopPlacesRequest"
              }
            }
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AuthorizationHeader" },
          { "$ref": "#/components/parameters/AcceptLanguageHeader" },
          { "$ref": "#/components/parameters/ET-ClientHeader" },
          { "$ref": "#/components/parameters/CorrelationIdHeader" },
          { "$ref": "#/components/parameters/LogLevelHeader" },
          { "$ref": "#/components/parameters/DistributionChannelHeader" },
          { "$ref": "#/components/parameters/POS-Header" },
          { "$ref": "#/components/parameters/ResponseTypeHeader" },
          { "$ref": "#/components/parameters/SkipOffersCachingHeader"}
        ]
      }
    },
    "/offers/v2/search/zones": {
      "post": {
        "summary": "Search zones",
        "tags": [
          "external"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "operationId": "post-offers-v2-search-zones",
        "description": "Search for offers by tariff zones. The offers returned are not limited to a specific departure. The offers will contain single and period tickets that are valid in the zones specified, and for the duration specified in the case of the period ticket.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchZonesRequest"
              }
            }
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AuthorizationHeader" },
          { "$ref": "#/components/parameters/AcceptLanguageHeader" },
          { "$ref": "#/components/parameters/ET-ClientHeader" },
          { "$ref": "#/components/parameters/CorrelationIdHeader" },
          { "$ref": "#/components/parameters/LogLevelHeader" },
          { "$ref": "#/components/parameters/DistributionChannelHeader" },
          { "$ref": "#/components/parameters/POS-Header" },
          { "$ref": "#/components/parameters/ResponseTypeHeader" },
          { "$ref": "#/components/parameters/SkipOffersCachingHeader"}
        ]
      }
    },
    "/offers/v2/search/authority": {
      "post": {
        "description": "Get offers by authority id, this will only find offers with a flat tariff basis. Only PurchaseWindow, Authority, DistributionChannel and UserProfile constraints are considered.",
        "operationId": "post-offers-v2-authority",
        "summary": "Get offers by authority id",
        "tags": [
          "external"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AuthorizationHeader"
          },
          {
            "$ref": "#/components/parameters/AcceptLanguageHeader"
          },
          {
            "$ref": "#/components/parameters/ET-ClientHeader"
          },
          {
            "$ref": "#/components/parameters/CorrelationIdHeader"
          },
          {
            "$ref": "#/components/parameters/LogLevelHeader"
          },
          {
            "$ref": "#/components/parameters/DistributionChannelHeader"
          },
          {
            "$ref": "#/components/parameters/POS-Header"
          },
          {
            "$ref": "#/components/parameters/ResponseTypeHeader"
          },
          {
            "$ref": "#/components/parameters/SkipOffersCachingHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchWithAuthorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        }
      }
    },
    "/offers/v2/{id}": {
      "get": {
        "summary": "Get offer by id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "300": {
            "$ref": "#/components/responses/multipleChoices"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "operationId": "get-offers-v2",
        "description": "Retrieve offer by id",
        "parameters": [
          { "$ref": "#/components/parameters/offerId" },
          { "$ref": "#/components/parameters/AuthorizationHeader" },
          { "$ref": "#/components/parameters/AcceptLanguageHeader" },
          { "$ref": "#/components/parameters/ET-ClientHeader" },
          { "$ref": "#/components/parameters/CorrelationIdHeader" },
          { "$ref": "#/components/parameters/LogLevelHeader" }
        ],
        "tags": [
          "internal"
        ]
      },
      "patch": {
        "summary": "Update offer with capped discount alternative",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfferWithCappedDiscountAlternativeRequest"
              }
            }
          }
        },
        "operationId": "patch-offers-v2-capped-discount-alternative",
        "description": "Update offer with capped discount alternative",
        "parameters": [
          { "$ref": "#/components/parameters/offerId" },
          { "$ref": "#/components/parameters/AuthorizationHeader" },
          { "$ref": "#/components/parameters/AcceptLanguageHeader" },
          { "$ref": "#/components/parameters/ET-ClientHeader" },
          { "$ref": "#/components/parameters/CorrelationIdHeader" },
          { "$ref": "#/components/parameters/LogLevelHeader" }
        ],
        "tags": [
          "external"
        ]
      }
    },
    "/offers/v2/{id}/travellers": {
      "get": {
        "summary": "Get travellers for offer",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Traveller"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "operationId": "get-offers-v2-travellers-id",
        "description": "Get travellers for a given offer",
        "parameters": [
          { "$ref": "#/components/parameters/offerId" },
          { "$ref": "#/components/parameters/AuthorizationHeader" },
          { "$ref": "#/components/parameters/AcceptLanguageHeader" },
          { "$ref": "#/components/parameters/ET-ClientHeader" },
          { "$ref": "#/components/parameters/CorrelationIdHeader" },
          { "$ref": "#/components/parameters/LogLevelHeader" }
        ],
        "tags": [
          "internal"
        ]
      }
    },
    "/offers/v2/journey-spec/{id}": {
      "get": {
        "summary": "Get journeySpec by id",
        "operationId": "get-offers-v2-journey-spec-id",
        "description": "Get journeySpec by id",
        "tags": [
          "internal"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the journey spec"
          },
          { "$ref": "#/components/parameters/AuthorizationHeader" },
          { "$ref": "#/components/parameters/AcceptLanguageHeader" },
          { "$ref": "#/components/parameters/ET-ClientHeader" },
          { "$ref": "#/components/parameters/CorrelationIdHeader" },
          { "$ref": "#/components/parameters/LogLevelHeader" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JourneySpec"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        }
      }
    },
    "/offers/v2/trip-pattern/{id}": {
      "get": {
        "summary": "Get trip pattern",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripPattern"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/tripPatternId"
          },
          {
            "$ref": "#/components/parameters/AuthorizationHeader"
          },
          {
            "$ref": "#/components/parameters/AcceptLanguageHeader"
          },
          {
            "$ref": "#/components/parameters/ET-ClientHeader"
          },
          {
            "$ref": "#/components/parameters/CorrelationIdHeader"
          },
          {
            "$ref": "#/components/parameters/LogLevelHeader"
          }
        ],
        "operationId": "get-offers-v2-trip-pattern-id",
        "description": "Get trip pattern by id",
        "tags": [
          "internal"
        ]
      }
    },
    "/offers/v2/offline-cache/trip-pattern": {
      "post": {
        "summary": "Search trip pattern",
        "operationId": "post-offers-v2-offline-cache-trip-pattern",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseFull"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "description": "Request offers for a specific departure between two stop places. At least one Traveller, and a TripPatternRequest is required.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTripPatternRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AuthorizationHeader"
          },
          {
            "$ref": "#/components/parameters/AcceptLanguageHeader"
          },
          {
            "$ref": "#/components/parameters/ET-ClientHeader"
          },
          {
            "$ref": "#/components/parameters/CorrelationIdHeader"
          },
          {
            "$ref": "#/components/parameters/LogLevelHeader"
          },
          {
            "$ref": "#/components/parameters/DistributionChannelHeader"
          },
          {
            "$ref": "#/components/parameters/POS-Header"
          }
        ],
        "tags": [
          "offline"
        ]
      }
    },
    "/offers/v2/offline-cache/stop-places": {
      "post": {
        "summary": "Search for offers by stop places",
        "tags": [
          "offline"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseFull"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "description": "Request offers that are not associated with any specific departure. The offers returned are period tickets or single tickets that are valid between stop places and for a given duration. Some combinations of stop places may result in offers that cover parts of the distance. As an example, let's say the \"from\" stop place is A, and the \"to\" stop place is C. There may not be a ticket that is valid from A to C, but tickets that are valid from A to B, and B to C. In that case you will receive offers that are valid for A to B and B to C. If you only want offers that cover the whole distance, set \"offersForWholeTripOnly\" to true.",
        "operationId": "post-offers-v2-offline-cache-stop-places",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchStopPlacesRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AuthorizationHeader"
          },
          {
            "$ref": "#/components/parameters/AcceptLanguageHeader"
          },
          {
            "$ref": "#/components/parameters/ET-ClientHeader"
          },
          {
            "$ref": "#/components/parameters/CorrelationIdHeader"
          },
          {
            "$ref": "#/components/parameters/LogLevelHeader"
          },
          {
            "$ref": "#/components/parameters/DistributionChannelHeader"
          },
          {
            "$ref": "#/components/parameters/POS-Header"
          }
        ]
      }
    },
    "/offers/v2/offline-cache/zones": {
      "post": {
        "summary": "Search zones",
        "tags": [
          "offline"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseFull"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        },
        "operationId": "post-offers-v2-offline-cache-zones",
        "description": "Search for offers by tariff zones. The offers returned are not limited to a specific departure. The offers will contain single and period tickets that are valid in the zones specified, and for the duration specified in the case of the period ticket.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchZonesRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AuthorizationHeader"
          },
          {
            "$ref": "#/components/parameters/AcceptLanguageHeader"
          },
          {
            "$ref": "#/components/parameters/ET-ClientHeader"
          },
          {
            "$ref": "#/components/parameters/CorrelationIdHeader"
          },
          {
            "$ref": "#/components/parameters/LogLevelHeader"
          },
          {
            "$ref": "#/components/parameters/DistributionChannelHeader"
          },
          {
            "$ref": "#/components/parameters/POS-Header"
          }
        ]
      }
    },
    "/offers/v2/offline-cache/authority": {
      "post": {
        "description": "Get offers by authority id, this will only find offers with a flat tariff basis. Only PurchaseWindow, Authority, DistributionChannel and UserProfile constraints are considered.",
        "operationId": "post-offers-v2-offline-cache-id",
        "summary": "Get offers by authority id",
        "tags": [
          "offline"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AuthorizationHeader"
          },
          {
            "$ref": "#/components/parameters/AcceptLanguageHeader"
          },
          {
            "$ref": "#/components/parameters/ET-ClientHeader"
          },
          {
            "$ref": "#/components/parameters/CorrelationIdHeader"
          },
          {
            "$ref": "#/components/parameters/LogLevelHeader"
          },
          {
            "$ref": "#/components/parameters/DistributionChannelHeader"
          },
          {
            "$ref": "#/components/parameters/POS-Header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchWithAuthorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseFull"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        }
      }
    },
    "/offers/v2/offline-cache/service-journey/stops": {
      "post": {
        "description": "Get offers for all combinations of stops on a service journey. Only returns fare products with distance based pricing which does not require seat reservations, quotas or personalisation. Offers are not cached, and cannot be fetched by ID later. Recommendations will never be included. Do not use for zone based products.",
        "operationId": "post-offers-v2-offline-cache-sj-stops",
        "summary": "Get offers for ServiceJourney",
        "tags": [
          "offline"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/AuthorizationHeader"
          },
          {
            "$ref": "#/components/parameters/AcceptLanguageHeader"
          },
          {
            "$ref": "#/components/parameters/ET-ClientHeader"
          },
          {
            "$ref": "#/components/parameters/CorrelationIdHeader"
          },
          {
            "$ref": "#/components/parameters/DistributionChannelHeader"
          },
          {
            "$ref": "#/components/parameters/POS-Header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchWithServiceJourney"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseFull"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "500": {
            "$ref": "#/components/responses/internalServerError"
          },
          "503": {
            "$ref": "#/components/responses/unavailable"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "offerId": {
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Id of the offer"
      },
      "tripPatternId": {
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Id of the trip pattern"
      },
      "AuthorizationHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Authorization",
        "required": true,
        "description": "Authorization token"
      },
      "AcceptLanguageHeader": {
        "schema": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "default": "nob"
        },
        "in": "header",
        "name": "Accept-Language",
        "description": "The language code from ISO-639-3"
      },
      "ET-ClientHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Et-Client-Name",
        "description": "Name of client requesting offers"
      },
      "CorrelationIdHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "X-Correlation-Id",
        "description": "Correlation id for the request"
      },
      "LogLevelHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Entur-log-level",
        "description": "Log level for this request"
      },
      "DistributionChannelHeader": {
        "schema": {
          "type": "string",
          "pattern":"^[A-Z]{3}:DistributionChannel:.+$"
        },
        "in": "header",
        "name": "Entur-Distribution-Channel",
        "required": true,
        "description": "Id of distribution channel requesting offers"
      },
      "POS-Header": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Entur-POS",
        "description": "Point-of-sale identifier"
      },
      "ResponseTypeHeader": {
        "schema": {
          "type": "string",
          "enum": [
            "SearchResponseFull",
            "SearchResponse"
          ],
          "default": "SearchResponse"
        },
        "deprecated": true,
        "in": "header",
        "name": "ResponseType",
        "description": "Type of response to return"
      },
      "SkipOffersCachingHeader": {
        "name": "Skip-Offers-Caching",
        "in": "header",
        "deprecated": true,
        "schema": {
          "type": "boolean"
        },
        "description": "Turn off caching of Offer, JourneySpec, Travellers and TripPattern. Use with caution! Disabling caching will make the offer unavailable for downstream services."
      }
    },
    "responses": {
      "badRequest": {
        "description": "Bad Request",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "forbidden": {
        "description": "Forbidden",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "notFound": {
        "description": "Not Found",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "internalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "unavailable": {
        "description": "Service is unavailable",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "multipleChoices": {
        "description": "Multiple Choices",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MultipleChoiceResponse"
            }
          }
        }
      }
    },
    "schemas": {
      "ApiError": {
        "type": "object",
        "required": [
          "timestamp",
          "status",
          "error",
          "message",
          "title",
          "detail"
        ],
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "error": {
            "type": "string",
            "deprecated": true,
            "description": "Deprecated. Use 'title'"
          },
          "message": {
            "type": "string",
            "deprecated": true,
            "description": "Deprecated. Use 'detail'"
          },
          "path": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "description": "Validation errors",
            "items": {
              "title": "ValidationError",
              "type": "object",
              "required": [
                "field",
                "message",
                "code"
              ],
              "properties": {
                "field": {
                  "type": "string",
                  "description": "The field containing an invalid value",
                  "example": "legs.fromStopPlaceId"
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message",
                  "example": "Wrong format for NeTEx id. Must be on the format \"NSR:StopPlace:___\"."
                },
                "code": {
                  "type": "string",
                  "description": "Error code",
                  "example": "INVALID_FORMAT"
                }
              }
            }
          }
        }
      },
      "MultipleChoiceResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Explanation of why the response is neither 2xx or 4xx",
            "example": "The offerId 00faf83-56c3-4f4e-8be9-e793c255a77b corresponds to an international offer"
          }
        }
      },
      "OfferSummary": {
        "title": "OfferSummary",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of an offer. This id will be referenced in recommendations where there are \"offersToBuy\". Also, the offerId can be used to obtain the original offer-structure from v1.",
            "example": "00faf83-56c3-4f4e-8be9-e793c255a77b"
          },
          "name": {
            "type": "string",
            "example": "Flex Refunderbar",
            "description": "The name of the SalesPackage that this OfferSummary represents."
          },
          "description": {
            "type": "string",
            "example": "Flex Refunderbar",
            "description": "The description of the offer."
          },
          "price": {
            "$ref": "#/components/schemas/PriceSummary"
          },
          "availableFulfillmentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableFulfillmentMethod"
            }
          },
          "geographicalValidity": {
            "$ref": "#/components/schemas/GeographicalValidity"
          },
          "preassignedProducts": {
            "type": "array",
            "description": "All mandatory products that give the buyer a right to travel is found here.",
            "items": {
              "$ref": "#/components/schemas/PreassignedProduct"
            }
          },
          "optionalProductsSelectableIds": {
            "type": "array",
            "x-isRequiredArray": true,
            "description": "This field contains an array of selectableId's to optional products associated with an offer. The optional products are found in the field \"optionalProducts\" in the search response.",
            "items": {
              "type": "string",
              "example": "XXFicO"
            }
          },
          "travellerMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TravellerMappingSummary"
            }
          },
          "available": {
            "type": "integer",
            "description": "Number of this offer available to buy at this point in time.",
            "example": 14
          },
          "cappedDiscountOption": {
            "$ref": "#/components/schemas/CappedDiscountOption"
          },
          "eligibleForAccrualInPrograms": {
            "type": "array",
            "description": "Buying this offer may give points in these personalisation programs.",
            "items": {
              "$ref": "#/components/schemas/ProgramAccrualSummary"
            }
          },
          "availablePrograms": {
            "type": "array",
            "description": "The customer may join the following programs to get points from buying this offer. It is expected that the caller does work to add the customer to the program.",
            "items": {
              "$ref": "#/components/schemas/ProgramSummary"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "price",
          "geographicalValidity",
          "preassignedProducts",
          "availableFulfillmentMethods"
        ]
      },
      "ProgramSummary": {
        "title": "ProgramSummary",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "9"
          },
          "reference": {
            "type": "string",
            "example": "entur_reis"
          },
          "name": {
            "type": "string",
            "example": "Entur Reis"
          },
          "infoLink": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "ProgramAccrualSummary": {
        "title": "ProgramSummary",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "9"
          },
          "reference": {
            "type": "string",
            "example": "entur_reis"
          },
          "name": {
            "type": "string",
            "example": "Entur Reis"
          },
          "infoLink": {
            "type": "string"
          },
          "paused": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "id"
        ]
      },
      "OptionalProduct": {
        "title": "OptionalProduct",
        "type": "object",
        "description": "Representation of a optional product that can be selected together with mandatory products in an offer",
        "properties": {
          "id": {
            "type": "string",
            "example": "NSB:SupplementProduct:BicycleReserving",
            "description": "Id of the optional product."
          },
          "version": {
            "type": "string",
            "example": "NSB:Version:V1",
            "description": "Version of the optional product."
          },
          "selectableId": {
            "type": "string",
            "example": "ZO9Qjn",
            "description": "This is the id that is referred to from the OfferSummary's optionalProductsSelectableId's. It is also the id used when reserving the offer in later steps."
          },
          "name": {
            "type": "string",
            "example": "Bike as luggage",
            "description": "Name of the optional product."
          },
          "description": {
            "type": "string",
            "example": "Bike as luggage",
            "description": "Description of the optional product."
          },
          "price": {
            "$ref": "#/components/schemas/PriceSummary"
          },
          "properties": {
            "$ref": "#/components/schemas/PropertiesSummary"
          },
          "geographicalValidity": {
            "$ref": "#/components/schemas/GeographicalValidity"
          },
          "discountRight": {
            "$ref": "#/components/schemas/DiscountRightSummary"
          },
          "available": {
            "type": "integer",
            "description": "How many of this optional product is available to buy at this point in time.",
            "example": 4
          },
          "supplementProductType": {
            "$ref": "#/components/schemas/SupplementProductTypeEnum"
          }
        },
        "required": [
          "id",
          "version",
          "selectableId",
          "name",
          "description",
          "price",
          "properties",
          "geographicalValidity"
        ]
      },
      "CappedDiscountOption": {
        "title": "CappedDiscountOption",
        "type": "object",
        "description": "A discount might be given based on previous transactions if CappedDiscountRequest was specified. A cappingSpecification must be specified in the traveller attribute in the request to the search/ endpoints in order to receive a discount. Capping must also be enabled by the operator of the service journey.",
        "properties": {
          "cappedDiscountRightRef": {
            "$ref": "#/components/schemas/RefType"
          },
          "cappedDiscountRuleRef": {
            "$ref": "#/components/schemas/RefType"
          },
          "alternatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CappingAlternative"
            }
          }
        },
        "required": [
          "cappedDiscountRightRef",
          "cappedDiscountRuleRef"
        ]
      },
      "CappingAlternative": {
        "title": "CappingAlternative",
        "type": "object",
        "description": "An alternative is based on previous transactions might have a discount at the expense of setting the start date in the past.",
        "properties": {
          "selectableId": {
            "type": "string",
            "description": "A pseudo random string that is used to select what alternative to use when purchasing an offer."
          },
          "discount": {
            "$ref": "#/components/schemas/Price"
          },
          "startDateTime": {
            "type": "string",
            "description": "The start date of this alternative.",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date of this alternative.",
            "format": "date-time"
          }
        },
        "required": [
          "selectableId",
          "discount",
          "startDateTime",
          "endDateTime"
        ]
      },
      "CappingSpecification": {
        "title": "CappingSpecification",
        "type": "object",
        "description": "Contains information to look up transaction history for a traveller and what CappedDiscountRight-program they are a part of.",
        "properties": {
          "cappedDiscountRightId": {
            "type": "string",
            "description": "Reference to a CappedDiscountRight.",
            "example": "VOT:CappedDiscountRight:Bestepris",
            "x-netextype": "CappedDiscountRight"
          },
          "fareContractId": {
            "type": "string",
            "description": "Reference to the fare contract for this traveller."
          },
          "customerRef": {
            "$ref": "#/components/schemas/CustomerRef"
          },
          "minimumDurationBetweenAlternatives": {
            "type": "string",
            "description": "To avoid too many similar alternatives you can specify a minimum period between the start date of each alternative.",
            "format": "duration"
          },
          "minimumAlternativeDuration": {
            "type": "string",
            "format": "duration",
            "description": "Specify a minimum alternative duration to avoid alternatives that doesn't last long enough in the future to be useful."
          }
        },
        "required": [
          "cappedDiscountRightId",
          "fareContractId",
          "customerRef"
        ]
      },
      "UnavailableProduct": {
        "title": "UnavailableProduct",
        "type": "object",
        "description": "Representation of a product that is unavailable, but would have been included in an offer if available.",
        "properties": {
          "id": {
            "type": "string",
            "example": "SJN:PreassignedFareProduct:StandardFullFlex"
          },
          "status": {
            "$ref": "#/components/schemas/UnavailableEnum"
          },
          "serviceJourney": {
            "$ref": "#/components/schemas/ServiceJourneySummary"
          },
          "properties": {
            "$ref": "#/components/schemas/UnavailableProductProperties"
          }
        },
        "required": [
          "id",
          "status",
          "serviceJourney"
        ]
      },
      "UnavailableProductProperties": {
        "title": "UnavailableProductProperties",
        "type": "object",
        "description": "Properties of an unavailable product",
        "properties": {
          "accommodations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccommodationFacilityEnum"
            }
          },
          "fareClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FareClassEnum"
            }
          },
          "isExchangeable": {
            "type": "boolean"
          },
          "isRefundable": {
            "type": "boolean"
          },
          "organisation": {
            "$ref": "#/components/schemas/OrganisationSummary"
          }
        }
      },
      "UnavailableEnum": {
        "type": "string",
        "title": "UnavailableEnum",
        "enum": [
          "SOLD_OUT",
          "CLOSED",
          "UNKNOWN"
        ]
      },
      "ComparisonOperatorEnum": {
        "type": "string",
        "title": "ComparisonOperatorEnum",
        "description": "The comparison operator used for the condition",
        "enum": [
          "EQ",
          "NE",
          "GT",
          "LT",
          "GE",
          "LE"
        ],
        "example": "EQ",
        "x-explain": null
      },
      "PreassignedProduct": {
        "title": "PreassignedProduct",
        "type": "object",
        "description": "Representation of a mandatory product that is included in an offer.",
        "properties": {
          "id": {
            "type": "string",
            "example": "SJN:PreassignedFareProduct:StandardFullFlex",
            "description": "The id if the preassigned product."
          },
          "version": {
            "type": "string",
            "example": "SJN:Version:V1",
            "description": "The version of the preassigned product."
          },
          "name": {
            "type": "string",
            "example": "Standard refunderbar",
            "description": "The name of the preassigned product."
          },
          "description": {
            "type": "string",
            "example": "Standard refunderbar",
            "description": "The description of the preassigned product."
          },
          "properties": {
            "$ref": "#/components/schemas/PropertiesSummary"
          },
          "geographicalValidity": {
            "$ref": "#/components/schemas/GeographicalValidity"
          },
          "discountRight": {
            "$ref": "#/components/schemas/DiscountRightSummary"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "description",
          "properties",
          "geographicalValidity"
        ]
      },
      "PriceSummary": {
        "title": "PriceSummary",
        "type": "object",
        "description": "Field containing the price and currency for the product, or the total for an offer.",
        "x-examples": {
          "example": {
            "amount": "2089.00",
            "currency": "NOK"
          }
        },
        "properties": {
          "amount": {
            "type": "string",
            "example": "100.00"
          },
          "currency": {
            "type": "string",
            "example": "NOK"
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "ServiceJourney": {
        "title": "ServiceJourney",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ENT:ServiceJourney:1-1605-1919"
          },
          "privateCode": {
            "type": "string",
            "example": "1919"
          }
        },
        "required": [
          "id"
        ]
      },
      "ServiceJourneySummary": {
        "title": "ServiceJourney",
        "type": "object",
        "properties": {
          "datedServiceJourneyId": {
            "type": "string",
            "example": "ENT:DatedServiceJourney:12345"
          },
          "serviceJourneyId": {
            "type": "string",
            "example": "NSB:ServiceJourney:56789"
          }
        },
        "required": [
          "datedServiceJourneyId",
          "serviceJourneyId"
        ]
      },
      "PropertiesSummary": {
        "title": "PropertiesSummary",
        "type": "object",
        "description": "Summary of properties for a product. The properties field contains all necessary information about a product. Here you will find accommodations, baggageTypes, fareClass, userProfiles and more.",
        "properties": {
          "isExchangeable": {
            "type": "boolean"
          },
          "isRefundable": {
            "type": "boolean"
          },
          "accommodations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccommodationForServiceJourney"
            }
          },
          "baggageTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaggageTypeEnum"
            }
          },
          "reservingRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservingRequirementForServiceJourney"
            }
          },
          "userProfileSummary": {
            "$ref": "#/components/schemas/UserProfileSummary"
          },
          "organisation": {
            "$ref": "#/components/schemas/OrganisationSummary"
          },
          "duration": {
            "type": "string"
          },
          "group": {
            "$ref": "#/components/schemas/GroupSummary"
          },
          "fareClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FareClassEnum"
            }
          },
          "carnet": {
            "$ref": "#/components/schemas/Carnet"
          },
          "durationType": {
            "$ref": "#/components/schemas/DurationEnum"
          }
        },
        "required": [
          "organisation"
        ]
      },
      "AccommodationFacilityEnum": {
        "type": "string",
        "enum": [
          "SLEEPER",
          "SEATING",
          "DOUBLE_SLEEPER",
          "SINGLE_SLEEPER",
          "SPECIAL_SLEEPER",
          "COUCHETTE",
          "SINGLE_COUCHETTE",
          "DOUBLE_COUCHETTE",
          "RECLINING_SEAT",
          "BABY_COMPARTMENT",
          "FAMILY_COMPARTMENT",
          "PANORAMA_COACH",
          "PULLMAN_COACH",
          "STANDING"
        ],
        "x-examples": {
          "example": "SLEEPER"
        }
      },
      "AccommodationForServiceJourney": {
        "title": "AccommodationForServiceJourney",
        "type": "object",
        "description": "Accommodation for service journey",
        "x-examples": {
          "example": {
            "serviceJourney": {
              "datedServiceJourneyId": "ENT:DatedServiceJourney:56179534",
              "serviceJourneyId": "NSB:ServiceJourney:1-435-119-202007111809"
            },
            "accommodation": "SLEEPER"
          }
        },
        "properties": {
          "serviceJourney": {
            "$ref": "#/components/schemas/ServiceJourneySummary"
          },
          "accommodation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccommodationFacilityEnum"
            }
          }
        },
        "required": [
          "serviceJourney",
          "accommodation"
        ]
      },
      "ReservingRequirementEnum": {
        "type": "string",
        "enum": [
          "RESERVATIONS_COMPULSORY",
          "RESERVATIONS_COMPULSORY_FOR_GROUPS",
          "RESERVATIONS_COMPULSORY_FOR_FIRST_CLASS",
          "RESERVATIONS_COMPULSORY_FROM_ORIGIN_STATION",
          "RESERVATIONS_RECOMMENDED",
          "RESERVATIONS_POSSIBLE",
          "RESERVATIONS_POSSIBLE_ONLY_IN_FIRST_CLASS",
          "RESERVATIONS_POSSIBLE_ONLY_IN_SECOND_CLASS",
          "RESERVATIONS_POSSIBLE_FOR_CERTAIN_CLASSES",
          "GROUP_BOOKING_RESTRICTED",
          "NO_GROUPS_ALLOWED",
          "NO_RESERVATIONS_POSSIBLE",
          "WHEELCHAIR_ONLY_RESERVATIONS",
          "BICYCLE_RESERVATIONS_COMPULSORY",
          "RESERVATION_SUPPLEMENT_CHARGED"
        ],
        "example": "RESERVATIONS_COMPULSORY"
      },
      "ReservingRequirementForServiceJourney": {
        "title": "ReservingRequirementForServiceJourney",
        "type": "object",
        "properties": {
          "serviceJourney": {
            "$ref": "#/components/schemas/ServiceJourneySummary"
          },
          "reservingRequirement": {
            "$ref": "#/components/schemas/ReservingRequirementEnum"
          },
          "seatMapIsAvailable": {
            "type": "boolean"
          }
        },
        "required": [
          "serviceJourney",
          "seatMapIsAvailable"
        ]
      },
      "BaggageTypeEnum": {
        "type": "string",
        "title": "BaggageTypeEnum",
        "enum": [
          "HANDBAG",
          "HAND_LUGGAGE",
          "SMALL_SUITCASE",
          "SUITCASE",
          "TRUNK",
          "OVERSIZE_ITEM",
          "BICYCLE",
          "SPORTING_EQUIPMENT",
          "SKIS",
          "MUSICAL_INSTRUMENT",
          "PUSH_CHAIR",
          "MOTORIZED_WHEELCHAIR",
          "LARGE_MOTORIZED_WHEELCHAIR",
          "WHEELCHAIR",
          "SMALL_ANIMAL",
          "ANIMAL",
          "GAME",
          "MOTORCYCLE",
          "OTHER"
        ],
        "example": "BICYCLE"
      },
      "Carnet": {
        "title": "Carnet",
        "type": "object",
        "description": "Representation of a repeatable ticket, with an optional duration for each instance and an amount of times the ticket can be used",
        "properties": {
          "amount": {
            "type": "integer",
            "example": 10
          },
          "duration": {
            "type": "string",
            "format": "duration",
            "example": "PT1H30M"
          }
        },
        "required": [
          "amount"
        ]
      },
      "OrganisationSummary": {
        "title": "OrganisationSummary",
        "type": "object",
        "description": "id and and name of an organisation",
        "properties": {
          "id": {
            "type": "string",
            "description": "the netex-id of organisation",
            "example": "GOA:Authority:GOA"
          },
          "name": {
            "type": "string",
            "description": "the name of the organisation",
            "example": "Go-Ahead Nordic"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "UserProfileSummary": {
        "title": "UserProfileSummary",
        "type": "object",
        "description": "id, version, name and user type of a user",
        "x-examples": {
          "example": {
            "id": "ENT:UserProfile:Adult",
            "version": "ENT:Version:V1",
            "name": "Ola Nordmann",
            "userType": "ADULT"
          }
        },
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "userType": {
            "$ref": "#/components/schemas/UserTypeEnum"
          }
        },
        "required": [
          "id",
          "version",
          "name"
        ]
      },
      "DiscountRightSummary": {
        "title": "DiscountRightSummary",
        "type": "object",
        "description": "Summary of a sale discount right that has been applied to the fare product.",
        "x-examples": {
          "example": {
            "id": "SJN:SaleDiscountRight:Premium",
            "version": "SJN:Version:SDR-Premium-1",
            "price": {
              "amount": "-739.00",
              "currency": "NOK"
            },
            "name": "Premiumrabatt"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "example": "SJN:SaleDiscountRight:Premium"
          },
          "version": {
            "type": "string",
            "example": "SJN:Version:SDR-Premium-1"
          },
          "price": {
            "$ref": "#/components/schemas/PriceSummary"
          },
          "name": {
            "type": "string",
            "example": "Premiumrabatt"
          },
          "description": {
            "type": "string",
            "example": "Premiumrabatt"
          },
          "originatingFromProductId": {
            "type": "string",
            "example": "ENT:EntitlementProduct:levelA1"
          }
        },
        "required": [
          "id",
          "version",
          "price",
          "name",
          "description"
        ]
      },
      "SupplementProductTypeEnum": {
        "title": "SupplementProductTypeEnum",
        "type": "string",
        "description": "Describes what type of supplement product this is.",
        "enum": [
          "SEAT_RESERVATION",
          "BICYCLE",
          "DOG",
          "ANIMAL",
          "MEAL",
          "WIFI",
          "EXTRA_LUGGAGE",
          "PENALTY",
          "UPGRADE",
          "JOURNEY_EXTENSION",
          "JOURNEY_ADD_ON",
          "EVENT_ADD_ON",
          "PARKING"
        ],
        "example": "BICYCLE"
      },
      "ProductTypeEnum": {
        "title": "ProductTypeEnum",
        "type": "string",
        "enum": [
          "TRIP_CARNET",
          "PASS_CARNET",
          "UNIT_COUPONS",
          "STORED_VALUE",
          "OTHER"
        ],
        "example": "TRIP_CARNET"
      },
      "GroupSummary": {
        "title": "GroupSummary",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ENT:GroupTicket:Family"
          },
          "version": {
            "type": "string",
            "example": "ENT:Version:V1"
          },
          "name": {
            "type": "string",
            "example": "Familiebillett"
          },
          "description": {
            "type": "string"
          },
          "userProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfileInGroupSummary"
            }
          }
        },
        "required": [
          "id",
          "version",
          "userProfiles",
          "description"
        ]
      },
      "UserProfileInGroupSummary": {
        "title": "UserProfileInGroupSummary",
        "type": "object",
        "description": "Reference to a group",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "numberOfPeople": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "numberOfPeople"
        ]
      },
      "SearchResponse": {
        "title": "SearchResponse",
        "type": "object",
        "properties": {
          "tripPatternId": {
            "type": "string",
            "example": "5e7cbc83e58e6a00011cecc3"
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferSummary"
            }
          },
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recommendation"
            }
          },
          "optionalProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionalProduct"
            }
          },
          "unavailableProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnavailableProduct"
            }
          },
          "explainInfo": {
            "$ref": "#/components/schemas/ExplainInfo"
          }
        },
        "required": [
          "offers"
        ]
      },
      "SearchResponseFull": {
        "title": "SearchResponseFull",
        "type": "object",
        "properties": {
          "tripPatternId": {
            "type": "string",
            "example": "5e7cbc83e58e6a00011cecc4"
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Offer"
            }
          },
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recommendation"
            }
          }
        }
      },
      "Recommendation": {
        "title": "Recommendation",
        "type": "object",
        "properties": {
          "geographicalValidityCovered": {
            "$ref": "#/components/schemas/GeographicalValidityCovered"
          },
          "typeOfRecommendation": {
            "$ref": "#/components/schemas/TypeOfRecommendationEnum"
          },
          "durationType": {
            "$ref": "#/components/schemas/DurationEnum"
          },
          "fareClass": {
            "$ref": "#/components/schemas/FareClassEnum"
          },
          "facilitySet": {
            "$ref": "#/components/schemas/AccommodationFacilityForRecommendationsEnum"
          },
          "offersToBuy": {
            "type": "array",
            "description": "Describes which offer to buy and how many of this offer to buy to satisfy a recommendation.",
            "items": {
              "$ref": "#/components/schemas/OfferToBuy"
            }
          }
        },
        "required": [
          "geographicalValidityCovered",
          "typeOfRecommendation",
          "offersToBuy"
        ]
      },
      "FareClassEnum": {
        "type": "string",
        "title": "FareClassEnum",
        "description": "A type of FareClass",
        "enum": [
          "FIRST_CLASS",
          "SECOND_CLASS",
          "THIRD_CLASS",
          "ECONOMY_CLASS",
          "BUSINESS_CLASS",
          "TURISTA",
          "PREFERENTE",
          "PREMIUM_CLASS",
          "ANY",
          "STANDARD_CLASS",
          "UNKNOWN"
        ],
        "example": "STANDARD_CLASS",
        "x-examples": {
          "example": "STANDARD_CLASS"
        }
      },
      "TypeOfRecommendationEnum": {
        "type": "string",
        "title": "TypeOfRecommendationEnum",
        "description": "Describes the degree of flexibility in a recommendation (refundable vs non-refundable, exchangeable vs non-exchangeable). Whether the recommendation is the CHEAPEST - regardless of flexibility, or whether the recommendation is for a specified product.",
        "enum": [
          "FLEXIBLE",
          "SEMI_FLEXIBLE",
          "NON_FLEXIBLE",
          "CHEAPEST"
        ],
        "example": "CHEAPEST",
        "default": "CHEAPEST"
      },
      "AccommodationFacilityForRecommendationsEnum": {
        "type": "string",
        "title": "AccommodationFacilityForRecommendationsEnum",
        "description": "Describes the accommodation for a given recommendation.",
        "enum": [
          "SLEEPER",
          "SEATING",
          "COUCHETTE",
          "RECLINING_SEAT",
          "ANY_FACILITY_SET"
        ],
        "example": "SLEEPER",
        "x-examples": {
          "example": "SLEEPER"
        }
      },
      "OfferToBuy": {
        "title": "OfferToBuy",
        "type": "object",
        "description": "Describes which offer to buy and how many of this offer to buy to satisfy a recommendation",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the offer to buy",
            "example": "00faf83-56c3-4f4e-8be9-e793c255a77b"
          },
          "numberToBuy": {
            "type": "integer",
            "description": "Number of this offer to buy",
            "example": 2
          },
          "selectableProductIds": {
            "type": "array",
            "description": "List of selectableIds of supplement products which upgrades a product",
            "items": {
              "type": "string",
              "example": "KEeaHd"
            }
          },
          "possibleTravellerIds": {
            "type": "array",
            "description": "One possible grouping of travellers for the number of offers to buy",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "Adult-1"
              }
            }
          }
        },
        "required": [
          "id",
          "numberToBuy",
          "selectableProductIds",
          "possibleTravellerIds"
        ]
      },
      "Traveller": {
        "type": "object",
        "description": "A specification of a traveller. Either age or userType must be set.",
        "x-isTraveller": true,
        "x-examples": {
          "example": {
            "id": "ID_A",
            "userType": "ADULT",
            "productIds": [
              "SJN:PreassignedFareProduct:StandardFullFlex"
            ],
            "baggageTypes": [
              "BICYCLE"
            ]
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier for the traveller. The travellers id will be referenced in the response where natural. Specifying an id for each traveller can make it easier to determine the seating and for whom each product is intended. If no ID is specified, the traveller will be assigned a random ID, only valid for the particular offer.",
            "example": "ID_A"
          },
          "userType": {
            "$ref": "#/components/schemas/UserTypeEnum"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "description": "Specify the travellers age, to let the system calculate the corresponding userType."
          },
          "productIds": {
            "type": "array",
            "x-isRequiredArray": true,
            "description": "A list of references to products that the traveller already owns",
            "x-netextype": ".+",
            "items": {
              "type": "string"
            }
          },
          "baggageTypes": {
            "type": "array",
            "description": "A filter for what kind of luggage the traveller wants offers for. If, for example, a user wants to bring a bicycle along for the trip. \"BICYCLE\" can be specified in that array. Offers that can't fulfill the wish for a \"BICYCLE\" accommodation are still returned from our services.",
            "items": {
              "$ref": "#/components/schemas/BaggageTypeEnum"
            }
          },
          "cappingSpecification": {
            "$ref": "#/components/schemas/CappingSpecification"
          },
          "customerId": {
            "type": "string",
            "description": "Identification of an Entur-customer. Used to personalise Offers when applicable.",
            "example": "1234567"
          },
          "campaignCodes": {
            "type": "array",
            "x-isRequiredArray": true,
            "description": "List of campaign codes that might give entitlements",
            "items": {
              "type": "string",
              "description": "Campaign code that might give entitlements",
              "example": "MYCODE"
            }
          }
        }
      },
      "UserTypeEnum": {
        "title": "UserTypeEnum",
        "type": "string",
        "description": "A type of traveller. An offer for userType=CHILD, will naturally be different than an offer for userType=ADULT.",
        "example": "ADULT",
        "enum": [
          "ANYONE",
          "ADULT",
          "CHILD",
          "INFANT",
          "ANIMAL",
          "SENIOR",
          "GUIDE_DOG",
          "YOUTH",
          "STUDENT",
          "MILITARY"
        ]
      },
      "TripPattern": {
        "type": "object",
        "description": "List of legs constituting a suggested sequence of rides and links for a specific trip.",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the trip pattern",
            "example": "5e7cbc83e58e6a00011cecc3"
          },
          "legs": {
            "type": "array",
            "description": "Legs constituting a suggested sequence of rides and links for this trip",
            "items": {
              "$ref": "#/components/schemas/Leg"
            }
          }
        }
      },
      "TripPatternRequest": {
        "type": "object",
        "description": "List of legs constituting a suggested sequence of rides and links for a specific trip.",
        "properties": {
          "legs": {
            "type": "array",
            "minItems": 1,
            "x-notEmpty": true,
            "description": "Legs constituting a suggested sequence of rides and links for this trip.",
            "items": {
              "$ref": "#/components/schemas/LegRequest"
            }
          }
        },
        "required": [
          "legs"
        ]
      },
      "LegRequest": {
        "type": "object",
        "description": "Leg request describing a part of a journey",
        "properties": {
          "travelDate": {
            "type": "string",
            "description": "The date of departure from the source origin. In most cases, this is the same date as departure from fromStopPlace. However, in the case of ServiceJourneys crosses midnight and departure from fromStopPlace is after midnight, these two dates are not equal. The correct date to use is for the ServiceJourney.",
            "format": "date",
            "example": "2020-05-13"
          },
          "travelDateTime": {
            "type": "string",
            "description": "The specific time for the chosen journey at fromStopPlaceId as specified in JourneyPlanner.",
            "format": "date-time",
            "example": "2024-02-24T00:00:00+00"
          },
          "fromStopPlaceId": {
            "type": "string",
            "description": "Stop place id for the origin of the leg",
            "example": "NSR:StopPlace:635",
            "x-netextype": "StopPlace",
            "x-netexcodespace": "NSR"
          },
          "toStopPlaceId": {
            "type": "string",
            "description": "Stop place id for the destination of the leg",
            "example": "NSR:StopPlace:640",
            "x-netextype": "StopPlace",
            "x-netexcodespace": "NSR"
          },
          "serviceJourneyId": {
            "type": "string",
            "description": "Service journey id for the leg",
            "example": "NSB:ServiceJourney:1-232-1016-20201117132",
            "x-netextype": "ServiceJourney"
          }
        },
        "required": [
          "travelDate",
          "fromStopPlaceId",
          "toStopPlaceId",
          "serviceJourneyId"
        ]
      },
      "Leg": {
        "type": "object",
        "description": "Part of a trip pattern. Either a ride on a public transport vehicle or access or path link to/from/between places",
        "properties": {
          "aimedStartTime": {
            "type": "string",
            "description": "The aimed date and time this leg starts.",
            "format": "date-time",
            "example": "2020-05-13T07:19:30.389Z"
          },
          "aimedEndTime": {
            "type": "string",
            "description": "The aimed date and time this leg ends.",
            "format": "date-time",
            "example": "2020-05-13T09:19:30.389Z"
          },
          "expectedStartTime": {
            "type": "string",
            "description": "The expected date and time this leg starts.",
            "format": "date-time",
            "example": "2020-05-13T07:19:30.389Z"
          },
          "expectedEndTime": {
            "type": "string",
            "description": "The expected date and time this leg ends.",
            "format": "date-time",
            "example": "2020-05-13T09:19:30.389Z"
          },
          "mode": {
            "$ref": "#/components/schemas/TransportModeEnum"
          },
          "transportSubmode": {
            "$ref": "#/components/schemas/TransportSubModeEnum"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "authority": {
            "$ref": "#/components/schemas/Authority"
          },
          "ride": {
            "type": "boolean",
            "description": "Whether this leg is a ride leg or not."
          },
          "fromPlace": {
            "$ref": "#/components/schemas/Place"
          },
          "toPlace": {
            "$ref": "#/components/schemas/Place"
          },
          "line": {
            "$ref": "#/components/schemas/Line"
          },
          "serviceJourney": {
            "$ref": "#/components/schemas/ServiceJourney"
          },
          "datedServiceJourney": {
            "$ref": "#/components/schemas/DatedServiceJourney"
          },
          "fromEstimatedCall": {
            "$ref": "#/components/schemas/EstimatedCall"
          },
          "toEstimatedCall": {
            "$ref": "#/components/schemas/EstimatedCall"
          },
          "intermediateQuays": {
            "type": "array",
            "description": "For ride legs, intermediate quays between the Place where the leg originates and the Place where the leg ends. For non-ride legs, null.",
            "items": {
              "$ref": "#/components/schemas/Quay"
            }
          },
          "pointsOnLink": {
            "$ref": "#/components/schemas/PointsOnLink"
          },
          "interchangeTo": {
            "$ref": "#/components/schemas/InterchangeTo"
          }
        },
        "required": [
          "aimedStartTime",
          "aimedEndTime",
          "mode",
          "ride",
          "fromPlace",
          "toPlace",
          "intermediateQuays"
        ]
      },
      "TransportModeEnum": {
        "type": "string",
        "title": "TransportModeEnum",
        "description": "The mode of transport or access (e.g., foot) used when traversing this leg.",
        "enum": [
          "AIR",
          "BICYCLE",
          "BUS",
          "CABLEWAY",
          "CAR",
          "WATER",
          "FUNICULAR",
          "LIFT",
          "RAIL",
          "METRO",
          "TRAM",
          "COACH",
          "TRANSIT",
          "FOOT",
          "CAR_PARK",
          "CAR_PICKUP",
          "CAR_DROPOFF",
          "UNKNOWN"
        ],
        "example": "RAIL"
      },
      "TransportSubModeEnum": {
        "type": "string",
        "description": "The transport sub mode (e.g., localBus or expressBus) used when traversing this leg. Null if leg is not a ride",
        "enum": [
          "UNKNOWN",
          "UNDEFINED",
          "INTERNATIONAL_FLIGHT",
          "DOMESTIC_FLIGHT",
          "INTERCONTINENTAL_FLIGHT",
          "DOMESTIC_SCHEDULED_FLIGHT",
          "SHUTTLE_FLIGHT",
          "INTERCONTINENTAL_CHARTER_FLIGHT",
          "INTERNATIONAL_CHARTER_FLIGHT",
          "ROUND_TRIP_CHARTER_FLIGHT",
          "SIGHTSEEING_FLIGHT",
          "HELICOPTER_SERVICE",
          "DOMESTIC_CHARTER_FLIGHT",
          "SCHENGEN_AREA_FLIGHT",
          "AIRSHIP_SERVICE",
          "SHORT_HAUL_INTERNATIONAL_FLIGHT",
          "CANAL_BARGE",
          "LOCAL_BUS",
          "REGIONAL_BUS",
          "EXPRESS_BUS",
          "NIGHT_BUS",
          "POST_BUS",
          "SPECIAL_NEEDS_BUS",
          "MOBILITY_BUS",
          "MOBILITY_BUS_FOR_REGISTERED_DISABLED",
          "SIGHTSEEING_BUS",
          "SHUTTLE_BUS",
          "HIGH_FREQUENCY_BUS",
          "DEDICATED_LANE_BUS",
          "SCHOOL_BUS",
          "SCHOOL_AND_PUBLIC_SERVICE_BUS",
          "RAIL_REPLACEMENT_BUS",
          "DEMAND_AND_RESPONSE_BUS",
          "AIRPORT_LINK_BUS",
          "INTERNATIONAL_COACH",
          "NATIONAL_COACH",
          "SHUTTLE_COACH",
          "REGIONAL_COACH",
          "SPECIAL_COACH",
          "SCHOOL_COACH",
          "SIGHTSEEING_COACH",
          "TOURIST_COACH",
          "COMMUTER_COACH",
          "FUNICULAR",
          "STREET_CABLE_CAR",
          "ALL_FUNICULAR_SERVICES",
          "UNDEFINED_FUNICULAR",
          "METRO",
          "TUBE",
          "URBAN_RAILWAY",
          "CITY_TRAM",
          "LOCAL_TRAM",
          "REGIONAL_TRAM",
          "SIGHTSEEING_TRAM",
          "SHUTTLE_TRAM",
          "TRAIN_TRAM",
          "TELECABIN",
          "CABLE_CAR",
          "LIFT",
          "CHAIR_LIFT",
          "DRAG_LIFT",
          "TELECABIN_LINK",
          "LOCAL",
          "HIGH_SPEED_RAIL",
          "SUBURBAN_RAILWAY",
          "REGIONAL_RAIL",
          "INTERREGIONAL_RAIL",
          "LONG_DISTANCE",
          "INTERNATIONAL",
          "SLEEPER_RAIL_SERVICE",
          "NIGHT_RAIL",
          "CAR_TRANSPORT_RAIL_SERVICE",
          "TOURIST_RAILWAY",
          "AIRPORT_LINK_RAIL",
          "RAIL_SHUTTLE",
          "REPLACEMENT_RAIL_SERVICE",
          "SPECIAL_TRAIN",
          "CROSS_COUNTRY_RAIL",
          "RACK_AND_PINION_RAILWAY",
          "INTERNATIONAL_CAR_FERRY",
          "NATIONAL_CAR_FERRY",
          "REGIONAL_CAR_FERRY",
          "LOCAL_CAR_FERRY",
          "INTERNATIONAL_PASSENGER_FERRY",
          "NATIONAL_PASSENGER_FERRY",
          "REGIONAL_PASSENGER_FERRY",
          "LOCAL_PASSENGER_FERRY",
          "POST_BOAT",
          "TRAIN_FERRY",
          "ROAD_FERRY_LINK",
          "AIRPORT_BOAT_LINK",
          "HIGH_SPEED_VEHICLE_SERVICE",
          "HIGH_SPEED_PASSENGER_SERVICE",
          "SIGHTSEEING_SERVICE",
          "SCHOOL_BOAT",
          "CABLE_FERRY",
          "RIVER_BUS",
          "SCHEDULED_FERRY",
          "SHUTTLE_FERRY_SERVICE",
          "COMMUNAL_TAXI",
          "CHARTER_TAXI",
          "WATER_TAXI",
          "RAIL_TAXI",
          "BIKE_TAXI",
          "BLACK_CAB",
          "MINI_CAB",
          "ALL_TAXI_SERVICES",
          "HIRE_CAR",
          "HIRE_VAN",
          "HIRE_MOTORBIKE",
          "HIRE_CYCLE",
          "ALL_HIRE_VEHICLES"
        ],
        "example": "LOCAL"
      },
      "PricedGroup": {
        "required": [
          "description",
          "id",
          "name",
          "optional",
          "priceContributions",
          "prices",
          "selectableId",
          "userProfiles",
          "version",
          "companionProfileSummary"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >"
          },
          "selectableId": {
            "type": "string",
            "description": "Used for selecting a unique element in the configurations"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "typeOfUsageParameter": {
            "type": "string",
            "description": "The type of this usage parameter."
          },
          "optional": {
            "type": "boolean",
            "description": "True if this configuration is optional to buy, false if it's required. Deprecation: This is not in used and is to be removed. The value should be considered false",
            "deprecated": true
          },
          "userProfiles": {
            "type": "array",
            "description": "Reference to a group",
            "items": {
              "$ref": "#/components/schemas/UserProfileInGroup"
            },
            "deprecated": true
          },
          "pricingBasis": {
            "$ref": "#/components/schemas/PricingBasisEnum",
            "deprecated": true
          },
          "minNumberOfPersons": {
            "type": "integer",
            "description": "Minimum number of persons in the group",
            "deprecated": true
          },
          "maxNumberOfPersons": {
            "type": "integer",
            "description": "Maximum number of persons in the group",
            "deprecated": true
          },
          "companionProfileSummary": {
            "type": "array",
            "description": "Reference to a group",
            "items": {
              "$ref": "#/components/schemas/CompanionProfileInGroup"
            }
          }
        },
        "description": "A reference to a group with price data."
      },
      "PricingBasisEnum": {
        "type": "string",
        "description": "Basis on which pricing is done - per whole group\nor per member.",
        "enum": [
          "PER_OFFER",
          "PER_PERSON"
        ],
        "example": "PER_OFFER"
      },
      "SearchWithAuthorityRequest": {
        "type": "object",
        "description": "A request used to search for fare products without inputting geographic data, but instead use Authority",
        "x-hasTravellers": true,
        "properties": {
          "travelDate": {
            "type": "string",
            "description": "The specific time for when the ticket should be activated. For most purposes it is recommended to use the current time as traveldate. That is because most period tickets are activated immediately on purchase. If you want to get a period ticket that should be activated some time in the future, specify the future date.",
            "format": "date-time",
            "example": "2022-02-24T00:00:00+00"
          },
          "travellers": {
            "type": "array",
            "minItems": 1,
            "x-notEmpty": true,
            "description": "The travellers the offer should be valid for.",
            "items": {
              "$ref": "#/components/schemas/Traveller"
            }
          },
          "authorityId": {
            "type": "string",
            "description": "NeTEx-id of Authority. Only offers valid for this Authority will be considered.",
            "example": "ENT:Authority:1",
            "x-netextype": "Authority"
          },
          "explainSpecification": {
            "$ref": "#/components/schemas/ExplainSpecification"
          }
        },
        "required": [
          "travellers",
          "authorityId",
          "travelDate"
        ]
      },
      "TicketTypeEnum": {
        "type": "string",
        "description": "What type of ticket is being requested",
        "default": "SINGLE_TRIP",
        "enum": [
          "SINGLE_TRIP",
          "PERIOD_PASS"
        ],
        "example": "PERIOD_PASS"
      },
      "SearchWithServiceJourney": {
        "type": "object",
        "description": "A request used to search for simple products on a ServiceJourney",
        "properties": {
          "travelDate": {
            "type": "string",
            "description": "The specific time for when the ServiceJourney departs the origin stop.",
            "format": "date",
            "example": "2022-02-24"
          },
          "serviceJourneyId": {
            "type": "string",
            "description": "NeTEx-id of ServiceJourney",
            "example": "ENT:ServiceJourney:1",
            "x-netextype": "ServiceJourney"
          },
          "ticketType": {
            "$ref": "#/components/schemas/TicketTypeEnum"
          }
        },
        "required": [
          "serviceJourneyId",
          "travelDate"
        ]
      },
      "SearchZonesRequest": {
        "type": "object",
        "description": "A request used to search for fare products valid between zones.",
        "x-hasExistingTicket": true,
        "x-hasTravellers": true,
        "properties": {
          "from": {
            "type": "string",
            "description": "The id of the origin zone.",
            "example": "RUT:FareZone:4",
            "x-netextype": "(Fare|Tariff)Zone"
          },
          "via": {
            "type": "array",
            "description": "Optional sequence of via zones.",
            "x-netextype": "(Fare|Tariff)Zone",
            "items": {
              "type": "string",
              "example": "RUT:FareZone:3"
            }
          },
          "to": {
            "type": "string",
            "description": "The id of the destination zone.",
            "example": "RUT:FareZone:6",
            "x-netextype": "(Fare|Tariff)Zone"
          },
          "travelDate": {
            "type": "string",
            "description": "The specific time for when the ticket should be activated. For most purposes it is recommended to use the current time as traveldate. That is because most period tickets are activated immediately on purchase. If you want to get a period ticket that should be activated some time in the future, specify the future date.",
            "format": "date-time",
            "example": "2022-02-24T00:00:00+00"
          },
          "travellers": {
            "type": "array",
            "minItems": 1,
            "x-notEmpty": true,
            "description": "The travellers the offer should be valid for.",
            "items": {
              "$ref": "#/components/schemas/Traveller"
            }
          },
          "existingTicket": {
            "$ref": "#/components/schemas/ExistingTicket"
          },
          "recommendationConfig": {
            "$ref": "#/components/schemas/RecommendationConfig"
          },
          "explainSpecification": {
            "$ref": "#/components/schemas/ExplainSpecification"
          }
        },
        "required": [
          "from",
          "to",
          "travelDate",
          "travellers"
        ]
      },
      "InterchangeTo": {
        "type": "object",
        "properties": {
          "staySeated": {
            "type": "boolean"
          },
          "fromServiceJourney": {
            "$ref": "#/components/schemas/ServiceJourney"
          },
          "toServiceJourney": {
            "$ref": "#/components/schemas/ServiceJourney"
          }
        },
        "description": "Used to specify that the vehicle used on this leg is the same that will be used on the next leg"
      },
      "UserProfileInGroup": {
        "type": "object",
        "description": "Reference to a group",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "typeOfConcession": {
            "type": "string",
            "example": "NSB:TypeOfConcession:Student"
          },
          "numberOfPeople": {
            "type": "integer",
            "description": "The number of people in the group.",
            "format": "int32"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "description",
          "numberOfPeople"
        ]
      },
      "CompanionProfileInGroup": {
        "type": "object",
        "description": "Reference to a group",
        "properties": {
          "numberOfTravellers": {
            "type": "integer",
            "description": "The number of travellers that is under the same companion profile.",
            "format": "int32"
          },
          "companionProfileId": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "NSB:CompanionProfile:abcd1234"
          },
          "companionProfileVersion": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:abcd1234"
          },
          "userProfileId": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "NSB:UserProfile:abcd1234"
          },
          "userProfileVersion": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:abcd1234"
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          }
        },
        "required": [
          "numberOfTravellers",
          "companionProfileId",
          "companionProfileVersion",
          "userProfileId",
          "userProfileVersion",
          "prices",
          "priceContributions"
        ]
      },
      "FareStructureElementConfiguration": {
        "type": "object",
        "description": "Reference to a Fare Structure Element and its configuration.",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "NSB:FareStructureElement:TENInterval"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/Properties"
          },
          "parameters": {
            "$ref": "#/components/schemas/UsageParameters"
          },
          "serviceJourneyIds": {
            "type": "array",
            "description": "Reference to the legs this configuration is for.",
            "items": {
              "type": "string",
              "example": "NSB:ServiceJourney:1-2201-319"
            }
          },
          "datedServiceJourneys": {
            "type": "array",
            "description": "Reference to the legs this configuration is for.",
            "items": {
              "$ref": "#/components/schemas/DatedServiceJourney"
            }
          },
          "interval": {
            "$ref": "#/components/schemas/GeoIntervalData"
          },
          "qualityFactor": {
            "$ref": "#/components/schemas/DataManagedObjectData"
          },
          "distanceMatrixElement": {
            "$ref": "#/components/schemas/DataManagedObjectData"
          },
          "quotas": {
            "type": "array",
            "description": "Quotas for the configuration",
            "items": {
              "$ref": "#/components/schemas/Quota"
            }
          },
          "specificParameterAssignments": {
            "description": "Specific parameter assignments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterSpecification"
            }
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "description",
          "prices",
          "priceContributions",
          "serviceJourneyIds",
          "quotas"
        ]
      },
      "Line": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the Line",
            "example": "GJB:Line:R30"
          }
        },
        "description": "A group of routes which is generally known to the public by a similar name or number implements"
      },
      "DistributionParameters": {
        "type": "object",
        "description": "References to different distribution parameters.",
        "title": "DistributionParameters",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "ENT:DistributionMethod:NOD"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "ENT:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "fulfillmentMethod": {
            "type": "string",
            "description": "Reference to a FulfillmentMethod with price information.",
            "example": "TRAVEL_CARD"
          },
          "distributionChannel": {
            "type": "string",
            "description": "Reference to a DistributionChannel with price information.",
            "example": "ENT:DistributionChannel:Online"
          },
          "distributionRights": {
            "$ref": "#/components/schemas/DistributionRightsEnum",
            "description": "Says what the distribution channel is allowed to do with this offer"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "description",
          "prices",
          "priceContributions"
        ],
        "x-examples": {
          "example": {
            "id": "ENT:DistributionMethod:NOD",
            "version": "ENT:Version:V1",
            "name": [
              {
                "lang": "nob",
                "value": "NOD distribusjon"
              }
            ],
            "description": [
              {
                "lang": "nob",
                "value": "Distribusjon via Nasjonal ordredatabase"
              }
            ],
            "prices": [],
            "fulfillmentMethod": "TRAVEL_CARD",
            "distributionChannel": "ENT:DistributionChannel:Online"
          }
        }
      },
      "SearchTripPatternRequest": {
        "type": "object",
        "description": "A request used to search for fare products for a specified trip.",
        "x-hasExistingTicket": true,
        "x-hasTravellers": true,
        "properties": {
          "travellers": {
            "type": "array",
            "minItems": 1,
            "x-notEmpty": true,
            "description": "The travellers.",
            "items": {
              "$ref": "#/components/schemas/Traveller"
            }
          },
          "existingTicket": {
            "$ref": "#/components/schemas/ExistingTicket"
          },
          "recommendationConfig": {
            "$ref": "#/components/schemas/RecommendationConfig"
          },
          "tripPattern": {
            "$ref": "#/components/schemas/TripPatternRequest"
          },
          "groupConfig": {
            "$ref": "#/components/schemas/GroupConfig"
          },
          "explainSpecification": {
            "$ref": "#/components/schemas/ExplainSpecification"
          },
          "includeMultiTripOffers": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "travellers",
          "tripPattern"
        ]
      },
      "EstimatedCall": {
        "type": "object",
        "description": "EstimatedCall for the quay.",
        "properties": {
          "date": {
            "type": "string",
            "description": "The date the estimated call is valid for.",
            "example": "2020-12-24T16:00:00Z"
          },
          "quay": {
            "$ref": "#/components/schemas/Quay"
          }
        },
        "required": [
          "date"
        ],
        "x-examples": {
          "example": {
            "date": "2020-12-24T16:00:00Z",
            "quay": {
              "id": "NSR:Quay:567",
              "stopPlace": {
                "id": "NSR:StopPlace:337",
                "name": "Oslo S",
                "tariffZones": [
                  {
                    "id": "RUT:TariffZone:1",
                    "name": "Ruter sone 1"
                  }
                ],
                "fareZones": [
                  {
                    "id": "RUT:FareZone:4",
                    "name": "Ruter sone 1"
                  }
                ],
                "longitude": 10.753276,
                "latitude": 59.910925
              }
            }
          }
        }
      },
      "DiscountUsageParameters": {
        "required": [
          "entitlementGiven",
          "reserving"
        ],
        "type": "object",
        "properties": {
          "reserving": {
            "type": "array",
            "description": "Reference to reserving parameters with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          },
          "entitlementGiven": {
            "type": "array",
            "description": "Reference to entitlement given parameters with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          }
        },
        "description": "Reference to different UsageParameters.",
        "x-examples": {
          "example": {
            "reserving": [
              {
                "id": "ENT:Reserving:ReservasjonsavgifterA",
                "selectableId": "ypLDzG",
                "version": "ENT:Version:V1",
                "name": [
                  {
                    "lang": "nob",
                    "value": "Reservasjonsavgift"
                  }
                ],
                "description": [
                  {
                    "lang": "nob",
                    "value": "Reservasjonsavgift"
                  }
                ],
                "prices": [
                  {
                    "amount": "50.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "priceContributions": [
                  {
                    "amount": "50.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "optional": false
              }
            ],
            "entitlementGiven": [
              {
                "id": "ENT:EntitlementGiven:ReservasjonsavgifterA-GOA-StandardFlexible",
                "selectableId": "apLKzI",
                "version": "ENT:Version:SDR-Reservasjonsavgifter-1",
                "name": [
                  {
                    "lang": "nob",
                    "value": "Rabatt"
                  }
                ],
                "description": [
                  {
                    "lang": "nob",
                    "value": "Rabatt"
                  }
                ],
                "prices": [
                  {
                    "amount": "-789.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "priceContributions": [
                  {
                    "amount": "-789.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "optional": false
              }
            ]
          }
        }
      },
      "ExistingTicket": {
        "type": "object",
        "description": "A specification of an existing ticket that covers part of the trip. The offers returned will take that existing ticket into account when considering which products the user may need. NOTE: When specifying an existing ticket, the \"travellers\" field can only contain one traveller. If the request is for more than one traveller, use the \"productIds\" field within the traveller object instead.",
        "x-examples": {
          "example": {
            "id": "RUT:PreassignedFareProduct:SupplementaryTicket",
            "zones": [
              "ENT:FareZone:1",
              "ENT:FareZone:2"
            ],
            "serviceJourneys": [
              "NSB:ServiceJourney:1-1056-141"
            ]
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The netex-id of the entity.",
            "example": "RUT:PreassignedFareProduct:SupplementaryTicket",
            "x-netextype": ".+"
          },
          "zones": {
            "type": "array",
            "description": "The zones the existing ticket is valid for",
            "x-netextype": "(Fare|Tariff)Zone",
            "items": {
              "type": "string",
              "example": "ENT:FareZone:1"
            }
          },
          "serviceJourneys": {
            "type": "array",
            "description": "ServiceJourneys, not implemented",
            "x-netextype": "ServiceJourney",
            "items": {
              "type": "string",
              "example": "NSB:ServiceJourney:1-1056-141"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "Authority": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "NeTEx-id of Authority.",
            "example": "ENT:Authority:ENT"
          },
          "name": {
            "type": "string",
            "description": "Name of Authority.",
            "example": "ENT"
          }
        },
        "description": "Authority involved in public transportation. An organisation under which the responsibility of organising the transport service in a certain area is placed.",
        "x-examples": {
          "example": {
            "id": "ENT:Authority:ENT",
            "name": "ENT"
          }
        }
      },
      "SalesPackageConfiguration": {
        "type": "object",
        "description": "Reference to a Sales Package and its configuration.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "NSB:SalesPackage:Ordinary"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/Properties"
          },
          "parameters": {
            "$ref": "#/components/schemas/UsageParameters"
          },
          "serviceJourneyIds": {
            "type": "array",
            "description": "Reference to the legs this configuration is for.",
            "items": {
              "type": "string",
              "example": "NSB:ServiceJourney:1234"
            }
          },
          "datedServiceJourneys": {
            "type": "array",
            "description": "Reference to the legs this configuration is for.",
            "items": {
              "$ref": "#/components/schemas/DatedServiceJourney"
            }
          },
          "distributions": {
            "type": "array",
            "description": "References to different distribution parameters.",
            "items": {
              "$ref": "#/components/schemas/DistributionParameters"
            }
          },
          "fareProducts": {
            "type": "array",
            "description": "Reference to a Fare Product and its configuration.",
            "items": {
              "$ref": "#/components/schemas/FareProductConfiguration"
            }
          },
          "specificParameterAssignments": {
            "description": "Specific parameter assignments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterSpecification"
            }
          },
          "cappedDiscountOption": {
            "$ref": "#/components/schemas/CappedDiscountOption"
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "description",
          "prices",
          "priceContributions",
          "serviceJourneyIds",
          "datedServiceJourneys",
          "distributions",
          "fareProducts"
        ]
      },
      "LineValidity": {
        "type": "object",
        "description": "Lines where the product is valid",
        "properties": {
          "validOn": {
            "type": "array",
            "description": "Valid on lines",
            "items": {
              "type": "string",
              "example": "NSB:Line:R11"
            }
          },
          "notValidOn": {
            "type": "array",
            "description": "Not valid on lines",
            "items": {
              "type": "string",
              "example": "NSB:Line:R20"
            }
          }
        },
        "required": [
          "validOn",
          "notValidOn"
        ]
      },
      "Quay": {
        "type": "object",
        "description": "A place such as platform, stance, or quayside where passengers have access to PT vehicles.",
        "properties": {
          "id": {
            "type": "string",
            "example": "NSR:Quay:11151"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "example": "Nydalen"
          },
          "stopPlace": {
            "$ref": "#/components/schemas/StopPlace"
          }
        }
      },
      "RecommendationConfig": {
        "type": "object",
        "description": "Specify what types of recommendations are returned in the response. For a more in depth explanation of recommendations, see the guide for recommendations at https://developer.entur.org/pages-offers-docs-guides-v2-recommendations",
        "properties": {
          "categorySpec": {
            "$ref": "#/components/schemas/CategorySpec"
          },
          "ruleSpec": {
            "$ref": "#/components/schemas/RuleSpec"
          }
        }
      },
      "ConditionSummary": {
        "type": "object",
        "properties": {
          "isRefundable": {
            "type": "boolean",
            "description": "Whether the ticket is refundable.",
            "example": true
          },
          "isExchangeable": {
            "type": "boolean",
            "description": "Whether the ticket is exchangeable.",
            "example": true
          }
        },
        "description": "A summary of the properties of a fare product or package that can be used to generate passenger information.",
        "x-examples": {
          "example": {
            "isRefundable": true,
            "isExchangeable": true
          }
        }
      },
      "Place": {
        "type": "object",
        "description": "Super type for all places (stop places, quays, car parks, bike parks and bike rental stations)",
        "properties": {
          "name": {
            "type": "string",
            "example": "Oslo S"
          },
          "quay": {
            "$ref": "#/components/schemas/Quay"
          }
        }
      },
      "DataManagedObjectData": {
        "type": "object",
        "description": "A simple reference object containing enough information to lookup the object itself if needed.",
        "x-examples": {
          "example": {
            "id": "ENT:PreassignedFareProduct:Sone1",
            "version": "ENT:Version:V1",
            "name": [
              {
                "lang": "nob",
                "value": "Enkeltbillett sone 1"
              }
            ],
            "description": [
              {
                "lang": "nob",
                "value": "Enkeltbillett sone 1"
              }
            ]
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "ENT:PreassignedFareProduct:Sone1"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "ENT:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "description"
        ]
      },
      "TariffZone": {
        "deprecated": true,
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "RUT:TariffZone:1"
          },
          "name": {
            "type": "string",
            "example": "Ruter sone 1"
          }
        },
        "required": [
          "id"
        ]
      },
      "FareZone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "RUT:FareZone:4"
          },
          "name": {
            "type": "string",
            "example": "Ruter sone 1"
          }
        },
        "required": [
          "id"
        ]
      },
      "LocalizedNamedReference": {
        "type": "object",
        "description": "A reference with an ID and a localized name in multiple languages using TextInLanguage",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          }
        },
        "required": ["id", "name"]
      },
      "PointToPointValidity": {
        "type": "object",
        "description": "Start and stop places where the product is valid.",
        "properties": {
          "fromPlace": {
            "type": "string",
            "description": "Valid from place",
            "example": "NSR:StopPlace:398"
          },
          "toPlace": {
            "type": "string",
            "description": "Valid to place",
            "example": "NSR:StopPlace:440"
          }
        },
        "required": [
          "fromPlace",
          "toPlace"
        ]
      },
      "TravellerMappingSummary": {
        "type": "object",
        "description": "A specification of which travellers can use an offer, along with limitations on the number of travellers that must be selected from the group for the OFFER to be valid.",
        "properties": {
          "travellerIds": {
            "type": "array",
            "description": "The ids of the travellers.",
            "items": {
              "type": "string",
              "example": "ID_A"
            }
          },
          "maxNumberOfTravellers": {
            "type": "integer",
            "description": "The maximum number of travellers that can be selected from the group.",
            "format": "int32"
          },
          "minNumberOfTravellers": {
            "type": "integer",
            "description": "The minimum number of travellers that can be selected from the group.",
            "format": "int32"
          },
          "userType": {
            "$ref": "#/components/schemas/UserTypeEnum"
          }
        },
        "required": [
          "travellerIds",
          "maxNumberOfTravellers",
          "minNumberOfTravellers",
          "userType"
        ]
      },
      "TravellerMapping": {
        "type": "object",
        "description": "A specification of which travellers can use an offer, along with limitations on the number of travellers that must be selected from the group for the OFFER to be valid.",
        "properties": {
          "travellerIds": {
            "type": "array",
            "description": "The ids of the travellers.",
            "items": {
              "type": "string",
              "example": "ID_A"
            }
          },
          "maxNumberOfTravellers": {
            "type": "integer",
            "description": "The maximum number of travellers that can be selected from the group.",
            "format": "int32"
          },
          "minNumberOfTravellers": {
            "type": "integer",
            "description": "The minimum number of travellers that can be selected from the group.",
            "format": "int32"
          },
          "userProfileId": {
            "type": "string",
            "description": "Reference to the user profile associated with this offer.",
            "example": "FLB:UserProfile:Adult"
          },
          "userProfileVersion": {
            "type": "string",
            "description": "Version to the user profile associated with this offer."
          },
          "travellerGroupId": {
            "type": "string",
            "description": "If the request uses traveller groups to specify the travellers this field holds the id of the group that the travellers belongs to."
          },
          "userProfileIds": {
            "type": "array",
            "description": "If there are a through fare with two operators more user profiles are needed, this list represents these",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "travellerIds",
          "maxNumberOfTravellers",
          "minNumberOfTravellers",
          "userProfileId",
          "userProfileVersion",
          "userProfileIds"
        ]
      },
      "PricedResourceRef": {
        "required": [
          "id",
          "resourceType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the resource, e.g. an ID of a 'TripPattern'."
          },
          "resourceType": {
            "type": "string",
            "description": "Name of the resource."
          }
        },
        "description": "A reference to the resource that is priced in this offer, e.g. a specific 'TripPattern'."
      },
      "UpdateOfferWithCappedDiscountAlternativeRequest": {
        "type": "object",
        "required": [
          "selectableId"
        ],
        "properties": {
          "selectableId": {
            "type": "string",
            "description": "Selectable id of the capped discount alternative"
          }
        }
      },
      "DatedServiceJourney": {
        "required": [
          "datedServiceJourneyId",
          "originalDatedServiceJourneyId"
        ],
        "type": "object",
        "properties": {
          "datedServiceJourneyId": {
            "type": "string",
            "description": "A unique departure ID.",
            "example": "ENT:DatedServiceJourney:151530"
          },
          "originalDatedServiceJourneyId": {
            "type": "string",
            "description": "A reference to the original dated service journey ID.",
            "example": "ENT:DatedServiceJourney:151530"
          }
        },
        "description": "A planned vehicle journey with passengers.",
        "x-examples": {
          "example": {
            "datedServiceJourneyId": "ENT:DatedServiceJourney:151530",
            "originalDatedServiceJourneyId": "ENT:DatedServiceJourney:132916"
          }
        }
      },
      "RuleSpec": {
        "type": "object",
        "description": "Determines what rules to apply when categorizing and recommending offers for travellers",
        "properties": {
          "journeyOrganizeAlgorithm": {
            "$ref": "#/components/schemas/JourneyOrganizeAlgorithmEnum"
          },
          "priceComparisonAlgorithm": {
            "$ref": "#/components/schemas/PriceComparisonAlgorithmEnum"
          },
          "onlyIncludeRecommendedOffers": {
            "type": "boolean",
            "default": false
          },
          "onlyIncludeRecommendationsWithOffersToBuy": {
            "type": "boolean",
            "default": true
          },
          "mixinOffersWithHigherFlexibility": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "ValidableElementConfiguration": {
        "type": "object",
        "description": "Reference to a Validable Element and its configuration.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "NSB:ValidableElement:Ordinary"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/Properties"
          },
          "parameters": {
            "$ref": "#/components/schemas/UsageParameters"
          },
          "serviceJourneyIds": {
            "type": "array",
            "description": "Reference to the legs this configuration is for.",
            "items": {
              "type": "string",
              "example": "NSB:ServiceJourney:1-2498-61"
            }
          },
          "datedServiceJourneys": {
            "type": "array",
            "description": "Reference to the legs this configuration is for.",
            "items": {
              "$ref": "#/components/schemas/DatedServiceJourney"
            }
          },
          "fareStructureElements": {
            "type": "array",
            "description": "Reference to a Fare Structure Element and its configuration.",
            "items": {
              "$ref": "#/components/schemas/FareStructureElementConfiguration"
            }
          },
          "occurs": {
            "type": "integer",
            "description": "How many repeatable validable elements",
            "format": "int32",
            "example": 10
          },
          "specificParameterAssignments": {
            "description": "Specific parameter assignments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterSpecification"
            }
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "description",
          "prices",
          "priceContributions",
          "serviceJourneyIds",
          "fareStructureElements"
        ]
      },
      "TextInLanguage": {
        "type": "object",
        "description": "Text in a specific language.",
        "properties": {
          "lang": {
            "type": "string",
            "description": "Language code.",
            "example": "nob"
          },
          "value": {
            "type": "string",
            "description": "The text.",
            "example": "Enkeltbillett sone 1"
          }
        },
        "required": [
          "lang",
          "value"
        ]
      },
      "Offer": {
        "type": "object",
        "description": "An identifiable SALES PACKAGE CONFIGURATION paired with information regarding which travellers can use it.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the OFFER.",
            "format": "uuid",
            "example": "f65c6b98-768f-4578-9c83-1a2ccfd2b7d7"
          },
          "requestedByDistributionChannel": {
            "type": "string",
            "description": "The requested distribution channel",
            "example": "ENT:DistributionChannel:Web"
          },
          "pricedResource": {
            "$ref": "#/components/schemas/PricedResourceRef"
          },
          "salesPackageConfig": {
            "$ref": "#/components/schemas/SalesPackageConfiguration"
          },
          "travellerMapping": {
            "type": "array",
            "description": "Traveller limitations that applies to the SALES PACKAGE CONFIGURATION.",
            "items": {
              "$ref": "#/components/schemas/TravellerMapping"
            }
          }
        },
        "required": [
          "id",
          "salesPackageConfig",
          "travellerMapping"
        ]
      },
      "Price": {
        "type": "object",
        "description": "Price with VAT and currency information",
        "properties": {
          "amount": {
            "type": "string",
            "description": "The amount.",
            "example": "100.00"
          },
          "vatGroup": {
            "type": "string",
            "description": "The VAT group.",
            "example": "TRANSPORT_AND_TICKETS_VAT"
          },
          "currency": {
            "type": "string",
            "description": "The currency of the amount.",
            "example": "NOK"
          }
        },
        "required": [
          "amount",
          "currency"
        ]
      },
      "UsageParameters": {
        "required": [
          "entitlementGiven",
          "exchanging",
          "luggageAllowances",
          "purchaseWindow",
          "refunds",
          "replacing",
          "reserving",
          "roundTrip",
          "transferability"
        ],
        "type": "object",
        "properties": {
          "userProfile": {
            "$ref": "#/components/schemas/PricedUserProfile"
          },
          "refunds": {
            "type": "array",
            "description": "Reference to a refund parameter with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          },
          "usageValidityPeriod": {
            "$ref": "#/components/schemas/PricedUsageParameter"
          },
          "luggageAllowances": {
            "type": "array",
            "description": "Reference to luggage allowance parameters with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          },
          "exchanging": {
            "type": "array",
            "description": "Reference to exchanging parameters with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          },
          "reserving": {
            "type": "array",
            "description": "Reference to reserving parameters with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          },
          "replacing": {
            "type": "array",
            "description": "Reference to replacing parameters with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          },
          "purchaseWindow": {
            "type": "array",
            "description": "Reference to purchase window parameters with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          },
          "entitlementGiven": {
            "type": "array",
            "description": "Reference to entitlement given parameters with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          },
          "roundTrip": {
            "type": "array",
            "description": "Reference to round trip parameters with price information",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          },
          "group": {
            "$ref": "#/components/schemas/PricedGroup"
          },
          "transferability": {
            "type": "array",
            "description": "Reference to transferability parameters with price information.",
            "items": {
              "$ref": "#/components/schemas/PricedUsageParameter"
            }
          }
        },
        "description": "Reference to different UsageParameters."
      },
      "FareProductConfiguration": {
        "type": "object",
        "description": "Reference to a Fare Product and its configuration.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "NSB:SupplementProduct:ExtraLegSpace"
          },
          "selectableId": {
            "type": "string",
            "description": "Used for selecting a unique element in the configurations",
            "example": "nhC7Jr"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "organisation": {
            "$ref": "#/components/schemas/OrganisationConfig"
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/Properties"
          },
          "parameters": {
            "$ref": "#/components/schemas/UsageParameters"
          },
          "serviceJourneyIds": {
            "type": "array",
            "description": "Reference to the legs this configuration is for.",
            "items": {
              "type": "string",
              "example": "NSB:ServiceJourney:1-4813-601"
            }
          },
          "datedServiceJourneys": {
            "type": "array",
            "description": "Reference to the legs this configuration is for.",
            "items": {
              "$ref": "#/components/schemas/DatedServiceJourney"
            }
          },
          "optional": {
            "type": "boolean",
            "description": "True if this configuration is optional to buy, false if it's required."
          },
          "validableElements": {
            "type": "array",
            "description": "Reference to a Validable Element and its configuration.",
            "items": {
              "$ref": "#/components/schemas/ValidableElementConfiguration"
            }
          },
          "typeOfFareProduct": {
            "type": "string",
            "description": "A classification of this fare product"
          },
          "conditionSummary": {
            "$ref": "#/components/schemas/ConditionSummary"
          },
          "discountRight": {
            "$ref": "#/components/schemas/DiscountRight"
          },
          "originatingFromProductId": {
            "type": "string",
            "description": "The id of the entitlement product that allowed the sale discount right to be used. Only used if the fare product configuration contains a sale discount right, and the traveller had an entitlement product.",
            "example": "SJN:PreassignedFareProduct:StandardFullFlex"
          },
          "pointToPointValidity": {
            "$ref": "#/components/schemas/PointToPointValidity"
          },
          "lineValidity": {
            "$ref": "#/components/schemas/LineValidity"
          },
          "supplementProductType": {
            "$ref": "#/components/schemas/SupplementProductTypeEnum"
          },
          "zonalValidity": {
            "$ref": "#/components/schemas/ZonalValidity"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of priced unit",
            "format": "int32"
          },
          "productType": {
            "$ref": "#/components/schemas/ProductTypeEnum"
          },
          "specificParameterAssignments": {
            "description": "Specific parameter assignments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterSpecification"
            }
          }
        },
        "required": [
          "id",
          "selectableId",
          "version",
          "name",
          "description",
          "organisation",
          "prices",
          "priceContributions",
          "serviceJourneyIds",
          "optional",
          "validableElements"
        ],
        "x-examples": {
          "example": {
            "id": "NSB:SupplementProduct:ExtraLegSpace",
            "selectableId": "nhC7Jr",
            "version": "NSB:Version:V1",
            "name": [
              {
                "lang": "nob",
                "value": "Ekstra benplass"
              },
              {
                "lang": "eng",
                "value": "Extra leg space"
              }
            ],
            "description": [
              {
                "lang": "nob",
                "value": "Sete med ekstra mye benplass"
              }
            ],
            "organisation": {
              "id": "ENT:Organisation:ENT",
              "privateCode": 1
            },
            "prices": [
              {
                "amount": "100.00",
                "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                "currency": "NOK"
              }
            ],
            "priceContributions": [
              {
                "amount": "100.00",
                "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                "currency": "NOK"
              }
            ],
            "properties": {
              "fareClasses": [
                "STANDARD_CLASS"
              ],
              "accommodations": [
                "SLEEPER"
              ]
            },
            "parameters": {
              "userProfile": {
                "id": "ENT:UserProfile:Anyone",
                "selectableId": "GtSlJQ",
                "version": "ENT:Version:V1",
                "name": [
                  {
                    "lang": "nob",
                    "value": "Enkeltbillett sone 1"
                  }
                ],
                "prices": [
                  {
                    "amount": "100.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "priceContributions": [
                  {
                    "amount": "100.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "optional": true,
                "typeOfConcession": "string"
              },
              "refunds": [
                {
                  "id": "NSB:UserProfile:Adult",
                  "selectableId": "ypLDzG",
                  "version": "NSB:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "typeOfUsageParameter": "string",
                  "optional": true
                }
              ],
              "usageValidityPeriod": {
                "id": "NSB:UserProfile:Adult",
                "selectableId": "ypLDzG",
                "version": "NSB:Version:V1",
                "name": [
                  {
                    "lang": "nob",
                    "value": "Enkeltbillett sone 1"
                  }
                ],
                "description": [
                  {
                    "lang": "nob",
                    "value": "Enkeltbillett sone 1"
                  }
                ],
                "prices": [
                  {
                    "amount": "100.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "priceContributions": [
                  {
                    "amount": "100.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "typeOfUsageParameter": "string",
                "optional": true
              },
              "luggageAllowances": [
                {
                  "id": "NSB:UserProfile:Adult",
                  "selectableId": "ypLDzG",
                  "version": "NSB:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "typeOfUsageParameter": "string",
                  "optional": true
                }
              ],
              "exchanging": [
                {
                  "id": "NSB:UserProfile:Adult",
                  "selectableId": "ypLDzG",
                  "version": "NSB:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "typeOfUsageParameter": "string",
                  "optional": true
                }
              ],
              "reserving": [
                {
                  "id": "NSB:UserProfile:Adult",
                  "selectableId": "ypLDzG",
                  "version": "NSB:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "typeOfUsageParameter": "string",
                  "optional": true
                }
              ],
              "replacing": [
                {
                  "id": "NSB:UserProfile:Adult",
                  "selectableId": "ypLDzG",
                  "version": "NSB:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "typeOfUsageParameter": "string",
                  "optional": true
                }
              ],
              "purchaseWindow": [
                {
                  "id": "NSB:UserProfile:Adult",
                  "selectableId": "ypLDzG",
                  "version": "NSB:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "typeOfUsageParameter": "string",
                  "optional": true
                }
              ],
              "entitlementGiven": [
                {
                  "id": "NSB:UserProfile:Adult",
                  "selectableId": "ypLDzG",
                  "version": "NSB:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "typeOfUsageParameter": "string",
                  "optional": true
                }
              ],
              "roundTrip": [
                {
                  "id": "NSB:UserProfile:Adult",
                  "selectableId": "ypLDzG",
                  "version": "NSB:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "typeOfUsageParameter": "string",
                  "optional": true
                }
              ],
              "group": {
                "id": "string",
                "selectableId": "string",
                "version": "NSB:Version:V1",
                "name": [
                  {
                    "lang": "nob",
                    "value": "Enkeltbillett sone 1"
                  }
                ],
                "description": [
                  {
                    "lang": "nob",
                    "value": "Enkeltbillett sone 1"
                  }
                ],
                "prices": [
                  {
                    "amount": "100.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "priceContributions": [
                  {
                    "amount": "100.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "typeOfUsageParameter": "string",
                "optional": true,
                "userProfiles": [
                  {
                    "id": "string",
                    "version": "NSB:Version:V1",
                    "name": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "description": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "typeOfConcession": "NSB:TypeOfConcession:Student",
                    "numberOfPeople": 0
                  }
                ],
                "pricingBasis": "PER_OFFER"
              },
              "transferability": [
                {
                  "id": "NSB:UserProfile:Adult",
                  "selectableId": "ypLDzG",
                  "version": "NSB:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Enkeltbillett sone 1"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "100.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "typeOfUsageParameter": "string",
                  "optional": true
                }
              ]
            },
            "serviceJourneyIds": [
              "NSB:ServiceJourney:1-4813-601"
            ],
            "datedServiceJourneys": [
              {
                "datedServiceJourneyId": "ENT:DatedServiceJourney:151530",
                "originalDatedServiceJourneyId": "ENT:DatedServiceJourney:151530"
              }
            ],
            "optional": true,
            "validableElements": [
              {
                "id": "NSB:ValidableElement:Ordinary",
                "version": "NSB:Version:V1",
                "name": [
                  {
                    "lang": "nob",
                    "value": "Enkeltbillett sone 1"
                  }
                ],
                "description": [
                  {
                    "lang": "nob",
                    "value": "Enkeltbillett sone 1"
                  }
                ],
                "prices": [
                  {
                    "amount": "100.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "priceContributions": [
                  {
                    "amount": "100.00",
                    "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                    "currency": "NOK"
                  }
                ],
                "properties": {
                  "fareClasses": [
                    "STANDARD_CLASS"
                  ],
                  "accommodations": [
                    "SLEEPER"
                  ]
                },
                "parameters": {
                  "userProfile": {
                    "id": "ENT:UserProfile:Anyone",
                    "selectableId": "GtSlJQ",
                    "version": "ENT:Version:V1",
                    "name": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "prices": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "priceContributions": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "optional": true,
                    "typeOfConcession": "string"
                  },
                  "refunds": [
                    {
                      "id": "NSB:UserProfile:Adult",
                      "selectableId": "ypLDzG",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "prices": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "priceContributions": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "typeOfUsageParameter": "string",
                      "optional": true
                    }
                  ],
                  "usageValidityPeriod": {
                    "id": "NSB:UserProfile:Adult",
                    "selectableId": "ypLDzG",
                    "version": "NSB:Version:V1",
                    "name": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "description": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "prices": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "priceContributions": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "typeOfUsageParameter": "string",
                    "optional": true
                  },
                  "luggageAllowances": [
                    {
                      "id": "NSB:UserProfile:Adult",
                      "selectableId": "ypLDzG",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "prices": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "priceContributions": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "typeOfUsageParameter": "string",
                      "optional": true
                    }
                  ],
                  "exchanging": [
                    {
                      "id": "NSB:UserProfile:Adult",
                      "selectableId": "ypLDzG",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "prices": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "priceContributions": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "typeOfUsageParameter": "string",
                      "optional": true
                    }
                  ],
                  "reserving": [
                    {
                      "id": "NSB:UserProfile:Adult",
                      "selectableId": "ypLDzG",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "prices": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "priceContributions": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "typeOfUsageParameter": "string",
                      "optional": true
                    }
                  ],
                  "replacing": [
                    {
                      "id": "NSB:UserProfile:Adult",
                      "selectableId": "ypLDzG",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "prices": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "priceContributions": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "typeOfUsageParameter": "string",
                      "optional": true
                    }
                  ],
                  "purchaseWindow": [
                    {
                      "id": "NSB:UserProfile:Adult",
                      "selectableId": "ypLDzG",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "prices": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "priceContributions": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "typeOfUsageParameter": "string",
                      "optional": true
                    }
                  ],
                  "entitlementGiven": [
                    {
                      "id": "NSB:UserProfile:Adult",
                      "selectableId": "ypLDzG",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "prices": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "priceContributions": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "typeOfUsageParameter": "string",
                      "optional": true
                    }
                  ],
                  "roundTrip": [
                    {
                      "id": "NSB:UserProfile:Adult",
                      "selectableId": "ypLDzG",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "prices": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "priceContributions": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "typeOfUsageParameter": "string",
                      "optional": true
                    }
                  ],
                  "group": {
                    "id": "string",
                    "selectableId": "string",
                    "version": "NSB:Version:V1",
                    "name": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "description": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "prices": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "priceContributions": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "typeOfUsageParameter": "string",
                    "optional": true,
                    "userProfiles": [
                      {
                        "id": "string",
                        "version": "NSB:Version:V1",
                        "name": [
                          {
                            "lang": "nob",
                            "value": "Enkeltbillett sone 1"
                          }
                        ],
                        "description": [
                          {
                            "lang": "nob",
                            "value": "Enkeltbillett sone 1"
                          }
                        ],
                        "typeOfConcession": "NSB:TypeOfConcession:Student",
                        "numberOfPeople": 0
                      }
                    ],
                    "pricingBasis": "PER_OFFER"
                  },
                  "transferability": [
                    {
                      "id": "NSB:UserProfile:Adult",
                      "selectableId": "ypLDzG",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "prices": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "priceContributions": [
                        {
                          "amount": "100.00",
                          "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                          "currency": "NOK"
                        }
                      ],
                      "typeOfUsageParameter": "string",
                      "optional": true
                    }
                  ]
                },
                "serviceJourneyIds": [
                  "NSB:ServiceJourney:1-2498-61"
                ],
                "datedServiceJourneys": [
                  {
                    "datedServiceJourneyId": "ENT:DatedServiceJourney:151530",
                    "originalDatedServiceJourneyId": "ENT:DatedServiceJourney:151530"
                  }
                ],
                "fareStructureElements": [
                  {
                    "id": "NSB:FareStructureElement:TENInterval",
                    "version": "NSB:Version:V1",
                    "name": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "description": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "prices": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "priceContributions": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "properties": {
                      "fareClasses": [
                        "STANDARD_CLASS"
                      ],
                      "accommodations": [
                        "SLEEPER"
                      ]
                    },
                    "parameters": {
                      "userProfile": {
                        "id": "ENT:UserProfile:Anyone",
                        "selectableId": "GtSlJQ",
                        "version": "ENT:Version:V1",
                        "name": [
                          {
                            "lang": "nob",
                            "value": "Enkeltbillett sone 1"
                          }
                        ],
                        "prices": [
                          {
                            "amount": "100.00",
                            "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                            "currency": "NOK"
                          }
                        ],
                        "priceContributions": [
                          {
                            "amount": "100.00",
                            "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                            "currency": "NOK"
                          }
                        ],
                        "optional": true,
                        "typeOfConcession": "string"
                      },
                      "refunds": [
                        {
                          "id": "NSB:UserProfile:Adult",
                          "selectableId": "ypLDzG",
                          "version": "NSB:Version:V1",
                          "name": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "description": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "prices": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "priceContributions": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "typeOfUsageParameter": "string",
                          "optional": true
                        }
                      ],
                      "usageValidityPeriod": {
                        "id": "NSB:UserProfile:Adult",
                        "selectableId": "ypLDzG",
                        "version": "NSB:Version:V1",
                        "name": [
                          {
                            "lang": "nob",
                            "value": "Enkeltbillett sone 1"
                          }
                        ],
                        "description": [
                          {
                            "lang": "nob",
                            "value": "Enkeltbillett sone 1"
                          }
                        ],
                        "prices": [
                          {
                            "amount": "100.00",
                            "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                            "currency": "NOK"
                          }
                        ],
                        "priceContributions": [
                          {
                            "amount": "100.00",
                            "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                            "currency": "NOK"
                          }
                        ],
                        "typeOfUsageParameter": "string",
                        "optional": true
                      },
                      "luggageAllowances": [
                        {
                          "id": "NSB:UserProfile:Adult",
                          "selectableId": "ypLDzG",
                          "version": "NSB:Version:V1",
                          "name": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "description": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "prices": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "priceContributions": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "typeOfUsageParameter": "string",
                          "optional": true
                        }
                      ],
                      "exchanging": [
                        {
                          "id": "NSB:UserProfile:Adult",
                          "selectableId": "ypLDzG",
                          "version": "NSB:Version:V1",
                          "name": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "description": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "prices": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "priceContributions": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "typeOfUsageParameter": "string",
                          "optional": true
                        }
                      ],
                      "reserving": [
                        {
                          "id": "NSB:UserProfile:Adult",
                          "selectableId": "ypLDzG",
                          "version": "NSB:Version:V1",
                          "name": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "description": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "prices": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "priceContributions": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "typeOfUsageParameter": "string",
                          "optional": true
                        }
                      ],
                      "replacing": [
                        {
                          "id": "NSB:UserProfile:Adult",
                          "selectableId": "ypLDzG",
                          "version": "NSB:Version:V1",
                          "name": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "description": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "prices": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "priceContributions": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "typeOfUsageParameter": "string",
                          "optional": true
                        }
                      ],
                      "purchaseWindow": [
                        {
                          "id": "NSB:UserProfile:Adult",
                          "selectableId": "ypLDzG",
                          "version": "NSB:Version:V1",
                          "name": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "description": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "prices": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "priceContributions": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "typeOfUsageParameter": "string",
                          "optional": true
                        }
                      ],
                      "entitlementGiven": [
                        {
                          "id": "NSB:UserProfile:Adult",
                          "selectableId": "ypLDzG",
                          "version": "NSB:Version:V1",
                          "name": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "description": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "prices": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "priceContributions": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "typeOfUsageParameter": "string",
                          "optional": true
                        }
                      ],
                      "roundTrip": [
                        {
                          "id": "NSB:UserProfile:Adult",
                          "selectableId": "ypLDzG",
                          "version": "NSB:Version:V1",
                          "name": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "description": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "prices": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "priceContributions": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "typeOfUsageParameter": "string",
                          "optional": true
                        }
                      ],
                      "group": {
                        "id": "string",
                        "selectableId": "string",
                        "version": "NSB:Version:V1",
                        "name": [
                          {
                            "lang": "nob",
                            "value": "Enkeltbillett sone 1"
                          }
                        ],
                        "description": [
                          {
                            "lang": "nob",
                            "value": "Enkeltbillett sone 1"
                          }
                        ],
                        "prices": [
                          {
                            "amount": "100.00",
                            "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                            "currency": "NOK"
                          }
                        ],
                        "priceContributions": [
                          {
                            "amount": "100.00",
                            "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                            "currency": "NOK"
                          }
                        ],
                        "typeOfUsageParameter": "string",
                        "optional": true,
                        "userProfiles": [
                          {
                            "id": "string",
                            "version": "NSB:Version:V1",
                            "name": [
                              {
                                "lang": "nob",
                                "value": "Enkeltbillett sone 1"
                              }
                            ],
                            "description": [
                              {
                                "lang": "nob",
                                "value": "Enkeltbillett sone 1"
                              }
                            ],
                            "typeOfConcession": "NSB:TypeOfConcession:Student",
                            "numberOfPeople": 0
                          }
                        ],
                        "pricingBasis": "PER_OFFER"
                      },
                      "transferability": [
                        {
                          "id": "NSB:UserProfile:Adult",
                          "selectableId": "ypLDzG",
                          "version": "NSB:Version:V1",
                          "name": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "description": [
                            {
                              "lang": "nob",
                              "value": "Enkeltbillett sone 1"
                            }
                          ],
                          "prices": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "priceContributions": [
                            {
                              "amount": "100.00",
                              "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                              "currency": "NOK"
                            }
                          ],
                          "typeOfUsageParameter": "string",
                          "optional": true
                        }
                      ]
                    },
                    "serviceJourneyIds": [
                      "NSB:ServiceJourney:1-2201-319"
                    ],
                    "datedServiceJourneys": [
                      {
                        "datedServiceJourneyId": "ENT:DatedServiceJourney:151530",
                        "originalDatedServiceJourneyId": "ENT:DatedServiceJourney:151530"
                      }
                    ],
                    "interval": {
                      "id": "NSB:GeographicalInterval:60TEN",
                      "version": "NSB:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "distance": 120,
                      "zoneCount": 4,
                      "zones": [
                        "INN:TariffZone:320"
                      ],
                      "fareZones": [
                        "INN:FareZone:1"
                      ]
                    },
                    "qualityFactor": {
                      "id": "ENT:PreassignedFareProduct:Sone1",
                      "version": "ENT:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ]
                    },
                    "distanceMatrixElement": {
                      "id": "ENT:PreassignedFareProduct:Sone1",
                      "version": "ENT:Version:V1",
                      "name": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ],
                      "description": [
                        {
                          "lang": "nob",
                          "value": "Enkeltbillett sone 1"
                        }
                      ]
                    },
                    "quotas": [
                      {
                        "serviceJourneyId": "NSB:ServiceJourney:X",
                        "stock": 10
                      }
                    ]
                  }
                ]
              }
            ],
            "typeOfFareProduct": "ENT:TypeOfFareProduct:update_product@single_operator",
            "conditionSummary": {
              "isRefundable": true,
              "isExchangeable": true
            },
            "discountRight": {
              "id": "SJN:SaleDiscountRight:Premium",
              "selectableId": "hlfmHy",
              "version": "SJN:Version:SDR-Premium-1",
              "name": [
                {
                  "lang": "nob",
                  "value": "Enkeltbillett sone 1"
                }
              ],
              "description": [
                {
                  "lang": "nob",
                  "value": "Enkeltbillett sone 1"
                }
              ],
              "organisation": {
                "id": "ENT:Organisation:ENT",
                "privateCode": 1
              },
              "prices": [
                {
                  "amount": "100.00",
                  "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                  "currency": "NOK"
                }
              ],
              "priceContributions": [
                {
                  "amount": "100.00",
                  "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                  "currency": "NOK"
                }
              ],
              "parameters": {
                "reserving": [
                  {
                    "id": "NSB:UserProfile:Adult",
                    "selectableId": "ypLDzG",
                    "version": "NSB:Version:V1",
                    "name": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "description": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "prices": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "priceContributions": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "typeOfUsageParameter": "string",
                    "optional": true
                  }
                ],
                "entitlementGiven": [
                  {
                    "id": "NSB:UserProfile:Adult",
                    "selectableId": "ypLDzG",
                    "version": "NSB:Version:V1",
                    "name": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "description": [
                      {
                        "lang": "nob",
                        "value": "Enkeltbillett sone 1"
                      }
                    ],
                    "prices": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "priceContributions": [
                      {
                        "amount": "100.00",
                        "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                        "currency": "NOK"
                      }
                    ],
                    "typeOfUsageParameter": "string",
                    "optional": true
                  }
                ]
              },
              "optional": true,
              "originatingFromProductId": "ENT:EntitlementProduct:V1F1"
            },
            "originatingFromProductId": "SJN:PreassignedFareProduct:StandardFullFlex",
            "pointToPointValidity": {
              "fromPlace": "NSR:StopPlace:398",
              "toPlace": "NSR:StopPlace:440"
            },
            "lineValidity": {
              "validOn": [
                "NSB:Line:R11"
              ],
              "notValidOn": [
                "NSB:Line:R20"
              ]
            }
          }
        }
      },
      "PricedUsageParameter": {
        "type": "object",
        "description": "A reference to a user parameter and price data.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "NSB:UserProfile:Adult"
          },
          "selectableId": {
            "type": "string",
            "description": "Used for selecting a unique element in the configurations",
            "example": "ypLDzG"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "typeOfUsageParameter": {
            "type": "string",
            "description": "The type of this usage parameter."
          },
          "optional": {
            "type": "boolean",
            "description": "True if this configuration is optional to buy, false if it's required."
          }
        },
        "required": [
          "id",
          "selectableId",
          "version",
          "name",
          "description",
          "prices",
          "priceContributions",
          "optional"
        ]
      },
      "GeoIntervalData": {
        "type": "object",
        "description": "The Geographical Interval with distance and zone data.",
        "x-examples": {
          "example": {
            "id": "NSB:GeographicalInterval:60TEN",
            "version": "NSB:Version:V1",
            "name": [
              {
                "lang": "nob",
                "value": "Enkeltbillett sone 1"
              }
            ],
            "description": [
              {
                "lang": "nob",
                "value": "Enkeltbillett sone 1"
              }
            ],
            "distance": 120,
            "zoneCount": 4,
            "zones": [
              "INN:TariffZone:320",
              "BRA:TariffZone:311",
              "RUT:TariffZone:1"
            ],
            "fareZones": [
              "INN:FareZone:1",
              "BRA:FareZone:31",
              "RUT:FareZone:4"
            ]
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "NSB:GeographicalInterval:60TEN"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "NSB:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "distance": {
            "type": "number",
            "description": "The distance in KM or TEN for this interval.",
            "format": "double",
            "example": 120
          },
          "zoneCount": {
            "type": "integer",
            "description": "The number of zones in this interval.",
            "format": "int32",
            "example": 4
          },
          "zones": {
            "type": "array",
            "deprecated": true,
            "description": "A list of the zones that exist in this interval. Empty if not relevant.",
            "items": {
              "type": "string",
              "example": "INN:TariffZone:320"
            }
          },
          "fareZones": {
            "type": "array",
            "description": "A list of fare zones that exist in this interval. Empty if not relevant.",
            "items": {
              "type": "string",
              "example": "INN:FareZone:1"
            }
          }
        },
        "required": [
          "id",
          "version",
          "name",
          "description",
          "zones",
          "fareZones"
        ]
      },
      "SearchStopPlacesRequest": {
        "type": "object",
        "description": "A request used to search for fare products between stop places",
        "x-hasTravellers": true,
        "properties": {
          "from": {
            "type": "string",
            "description": "The id of the origin stop place.",
            "example": "NSR:StopPlace:548",
            "x-netextype": "StopPlace",
            "x-netexcodespace": "NSR"
          },
          "to": {
            "type": "string",
            "description": "The id of the destination stop place.",
            "example": "NSR:StopPlace:337",
            "x-netextype": "StopPlace",
            "x-netexcodespace": "NSR"
          },
          "travelDate": {
            "type": "string",
            "description": "The specific time for when the ticket should be activated. For most purposes it is recommended to use the current time as traveldate. That is because most period tickets are activated immediately on purchase. If you want to get a period ticket that should be activated some time in the future, specify the future date.",
            "format": "date-time",
            "example": "2020-12-24T14:48:00+0200"
          },
          "travellers": {
            "type": "array",
            "minItems": 1,
            "x-notEmpty": true,
            "description": "The travellers the offer should be valid for.",
            "items": {
              "$ref": "#/components/schemas/Traveller"
            }
          },
          "recommendationConfig": {
            "$ref": "#/components/schemas/RecommendationConfig"
          },
          "offersForWholeTripOnly": {
            "type": "boolean",
            "default": false,
            "description": "Set this flag to true if you only want tickets that are valid all the way between the stop-places specified in the \"from\" and \"to\" field. When set to false, you will receive additional offers that are  valid for parts of the trip with one of the stop places covered."
          },
          "authority": {
            "type": "string",
            "description": "An optional authority ID. When using non-rail stop places, the response will contain products that allow or require this authority ID. When using rail stop places, the authority parameter is ignored, and relevant authority IDs are instead extracted from lines found between the two stops.",
            "example": "ENT:Authority:ENT",
            "x-netextype": "Authority"
          },
          "explainSpecification": {
            "$ref": "#/components/schemas/ExplainSpecification"
          }
        },
        "required": [
          "from",
          "to",
          "travelDate",
          "travellers"
        ]
      },
      "Operator": {
        "type": "object",
        "description": "Organisation providing public transport services.",
        "properties": {
          "id": {
            "type": "string",
            "description": "NeTEx-id of Operator.",
            "example": "RUT:Operator:210"
          },
          "name": {
            "type": "string",
            "description": "Name of Operator.",
            "example": "Sporveien T-banen AS"
          }
        }
      },
      "StopPlace": {
        "type": "object",
        "description": "A stop place",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "example": "NSR:StopPlace:337"
          },
          "name": {
            "type": "string",
            "description": "Name of stop place.",
            "example": "Oslo S"
          },
          "tariffZones": {
            "type": "array",
            "deprecated": true,
            "description": "Tariff zones",
            "items": {
              "$ref": "#/components/schemas/TariffZone"
            }
          },
          "fareZones": {
            "type": "array",
            "description": "Fare zones",
            "items": {
              "$ref": "#/components/schemas/FareZone"
            }
          },
          "longitude": {
            "type": "number",
            "description": "Longitude",
            "format": "double",
            "example": 10.753276
          },
          "latitude": {
            "type": "number",
            "description": "Latitude",
            "format": "double",
            "example": 59.910925
          }
        },
        "required": [
          "id"
        ]
      },
      "DiscountRight": {
        "type": "object",
        "description": "A sale discount right that has been applied to the fare product.",
        "x-examples": {
          "example": {
            "id": "ENT:SaleDiscountRight:ReservasjonsavgifterA",
            "selectableId": "hlfmHy",
            "version": "ENT:Version:V1",
            "name": [
              {
                "lang": "nob",
                "value": "Rabatt med reservasjonsavgift"
              }
            ],
            "description": [
              {
                "lang": "nob",
                "value": "Rabatt med reservasjonsavgift"
              }
            ],
            "organisation": {
              "id": "ENT:Organisation:ENT",
              "privateCode": 1
            },
            "prices": [
              {
                "amount": "-739.00",
                "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                "currency": "NOK"
              }
            ],
            "priceContributions": [
              {
                "amount": "0.00",
                "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                "currency": "NOK"
              }
            ],
            "parameters": {
              "reserving": [
                {
                  "id": "ENT:Reserving:ReservasjonsavgifterA",
                  "selectableId": "ypLDzG",
                  "version": "ENT:Version:V1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Reservasjonsavgift"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Reservasjonsavgift"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "50.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "50.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "optional": false
                }
              ],
              "entitlementGiven": [
                {
                  "id": "ENT:EntitlementGiven:ReservasjonsavgifterA-GOA-StandardFlexible",
                  "selectableId": "apLKzI",
                  "version": "ENT:Version:SDR-Reservasjonsavgifter-1",
                  "name": [
                    {
                      "lang": "nob",
                      "value": "Rabatt"
                    }
                  ],
                  "description": [
                    {
                      "lang": "nob",
                      "value": "Rabatt"
                    }
                  ],
                  "prices": [
                    {
                      "amount": "-789.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "priceContributions": [
                    {
                      "amount": "-789.00",
                      "vatGroup": "TRANSPORT_AND_TICKETS_VAT",
                      "currency": "NOK"
                    }
                  ],
                  "optional": false
                }
              ]
            },
            "optional": false,
            "originatingFromProductId": "ENT:EntitlementProduct:levelA1"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "SJN:SaleDiscountRight:Premium"
          },
          "selectableId": {
            "type": "string",
            "description": "Used for selecting a unique element in the configurations",
            "example": "hlfmHy"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "SJN:Version:SDR-Premium-1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "description": {
            "type": "array",
            "description": "The description of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "organisation": {
            "$ref": "#/components/schemas/OrganisationConfig"
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "parameters": {
            "$ref": "#/components/schemas/DiscountUsageParameters"
          },
          "optional": {
            "type": "boolean",
            "description": "True if this configuration is optional to buy, false if it's required."
          },
          "originatingFromProductId": {
            "type": "string",
            "description": "The id of the entitlement product that allowed the sale discount right to be used. Only used if the fare product configuration contains a sale discount right, and the traveller had an entitlement product.",
            "example": "ENT:EntitlementProduct:V1F1"
          }
        },
        "required": [
          "id",
          "selectableId",
          "version",
          "name",
          "description",
          "organisation",
          "prices",
          "priceContributions",
          "optional"
        ]
      },
      "Properties": {
        "type": "object",
        "description": "Container object for other properties.",
        "properties": {
          "fareClasses": {
            "type": "array",
            "description": "FareClasses.",
            "items": {
              "$ref": "#/components/schemas/FareClassEnum"
            }
          },
          "accommodations": {
            "type": "array",
            "description": "Accommodation.",
            "items": {
              "$ref": "#/components/schemas/AccommodationFacilityEnum"
            }
          }
        },
        "required": [
          "fareClasses",
          "accommodations"
        ]
      },
      "PricedUserProfile": {
        "type": "object",
        "description": "A reference to a user profile and price data.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the object on the format < context : type : instance name >",
            "example": "ENT:UserProfile:Anyone"
          },
          "selectableId": {
            "type": "string",
            "description": "Used for selecting a unique element in the configurations",
            "example": "GtSlJQ"
          },
          "version": {
            "type": "string",
            "description": "The version of the object",
            "example": "ENT:Version:V1"
          },
          "name": {
            "type": "array",
            "description": "The name of the object.",
            "items": {
              "$ref": "#/components/schemas/TextInLanguage"
            }
          },
          "prices": {
            "type": "array",
            "description": "The price(s) of the sub configurations below this node. Multiple prices is supported in case of prices in multiple currencies.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "priceContributions": {
            "type": "array",
            "description": "The price contribution shows how much this node contributes on the total price.",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "optional": {
            "type": "boolean",
            "description": "True if this configuration is optional to buy, false if it's required."
          },
          "typeOfConcession": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "selectableId",
          "version",
          "name",
          "prices",
          "priceContributions",
          "optional"
        ]
      },
      "Quota": {
        "required": [
          "serviceJourneyId",
          "stock",
          "serviceJourneyIds"
        ],
        "type": "object",
        "properties": {
          "serviceJourneyId": {
            "type": "string",
            "description": "The corresponding service journey id for this stock",
            "example": "NSB:ServiceJourney:X",
            "deprecated": true
          },
          "stock": {
            "type": "integer",
            "description": "The amount of stock for this priceable object.",
            "format": "int32",
            "example": 10
          },
          "serviceJourneyIds": {
            "type": "array",
            "description": "The corresponding service journey ids for this stock",
            "x-notEmpty": true,
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Quota for the priceable object",
        "x-examples": {
          "example-1": {
            "serviceJourneyId": "NSB:ServiceJourney:X",
            "stock": 10
          }
        }
      },
      "PointsOnLink": {
        "type": "object",
        "description": "A list of coordinates encoded as a polyline string (see https://code.google.com/apis/maps/documentation/polylinealgorithm.html)",
        "properties": {
          "points": {
            "type": "string",
            "description": "The encoded points of the polyline.",
            "example": "uhf_Jg~ahAu~oBye~@w~Ln~CqfkBtpaAelg@dejB"
          }
        },
        "required": [
          "points"
        ]
      },
      "DurationEnum": {
        "type": "string",
        "title": "DurationEnum",
        "description": "Validity duration.",
        "enum": [
          "SINGLE_TRIP",
          "RETURN_TRIP",
          "CARNET",
          "DAY_PASS",
          "WEEKLY_PASS",
          "WEEKEND_PASS",
          "MONTHLY_PASS",
          "SEASON_TICKET",
          "PROFILE_MEMBERSHIP",
          "OPEN_ENDED",
          "OTHER"
        ],
        "example": "DAY_PASS"
      },
      "CategorySpec": {
        "title": "CategorySpec",
        "type": "object",
        "description": "How to to categorize and group recommendations based on different categories.",
        "x-examples": {
          "example": {
            "typesOfRecommendation": [
              "FLEXIBLE",
              "CHEAPEST"
            ],
            "durationTypes": [
              "DAY_PASS",
              "SINGLE_TRIP"
            ],
            "fareClasses": [
              "FIRST_CLASS"
            ],
            "facilitySet": [
              "SLEEPER",
              "SEATING"
            ]
          }
        },
        "properties": {
          "typesOfRecommendation": {
            "type": "array",
            "x-isRequiredArray": true,
            "items": {
              "$ref": "#/components/schemas/TypeOfRecommendationEnum"
            }
          },
          "durationTypes": {
            "type": "array",
            "description": "If not specified, all durationTypes will be considered.",
            "items": {
              "$ref": "#/components/schemas/DurationEnum"
            }
          },
          "fareClasses": {
            "type": "array",
            "description": "If not specified, all fareClasses will be considered. Be aware that if not specified, the fareClass attribute in the recommendation object will read \"fareClass\":\"ANY\". To get the actual fareClass you would have to look up the corresponding offer.",
            "items": {
              "$ref": "#/components/schemas/FareClassEnum"
            }
          },
          "facilitySet": {
            "type": "array",
            "description": "If not specified, all accommodations will be considered. Be aware that if not specified, the facilitySet attribute in the recommendation object will read \"facilitySet\":\"ANY_FACILITY_SET\". To get the actual facilitySet you would have to look up the corresponding offer.",
            "items": {
              "$ref": "#/components/schemas/AccommodationFacilityForRecommendationsEnum"
            }
          }
        },
        "required": [
          "typesOfRecommendation"
        ]
      },
      "JourneyOrganizeAlgorithmEnum": {
        "type": "string",
        "description": "There are three supported algorithms for organizing how we present each combination of journeys. Given three journeys in the trip pattern; SJ-1, SJ-2, SJ-3 the three algorithms will generate these combinations:\nSUBSEQUENT_COMBINATIONS: (SJ-1), (SJ-2), (SJ-3), (SJ-1, SJ-2), (SJ-2, SJ-3), (SJ-1, SJ-2, SJ-3)\nFOR_EACH_AND_GROUPED_COMBINATIONS: (SJ-1), (SJ-2), (SJ-3), (SJ-1, SJ-2, SJ-3)\nCOMBINATIONS_FROM_OFFERS: Will only organize by unique journey combinations covered by offers.",
        "enum": [
          "SUBSEQUENT_COMBINATIONS",
          "COMBINATIONS_FROM_OFFERS",
          "FOR_EACH_AND_GROUPED_COMBINATIONS"
        ],
        "example": "FOR_EACH_AND_GROUPED_COMBINATIONS",
        "default": "SUBSEQUENT_COMBINATIONS"
      },
      "PriceComparisonAlgorithmEnum": {
        "type": "string",
        "description": "There are two supported algorithms for comparing offers; TOTAL_PRICE and BEFORE_SDR. TOTAL_PRICE: This is the default algorithm used if not specified, this only looks at the total price of the offers and finds the cheapest, if two offers have the same price, the one with the least amount of offers in the combination is chosen. BEFORE_SDR: This algorithm unapplies all sales discount rights in the offers before comparing prices, when the price of two combinations is the same, the combination containing the most amount of SDRs is chosen, thereafter if the amount is the same the combination with the least amount of offers in the combination is chosen.",
        "enum": [
          "TOTAL_PRICE",
          "BEFORE_SDR"
        ],
        "default": "BEFORE_SDR"
      },
      "OrganisationConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The netexId for the organisation.",
            "example": "ENT:Organisation:ENT"
          },
          "privateCode": {
            "type": "integer",
            "description": "The privateCode for the organisation, used to integrate with the organisation register.",
            "format": "int64",
            "example": 1
          }
        },
        "required": [
          "id"
        ],
        "description": "A request used to search for fare products for a specified trip."
      },
      "GeographicalValidity": {
        "title": "GeographicalValidity",
        "type": "object",
        "description": "Describes the geographical validity of a product. Includes information on ServiceJourneys, PointToPointValidity and ZonalValidity. In cases of replacement transport, these fields describe the replacement journey.",
        "properties": {
          "serviceJourneys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceJourneySummary"
            }
          },
          "pointToPointValidity": {
            "$ref": "#/components/schemas/PointToPointValidity"
          },
          "zonalValidity": {
            "$ref": "#/components/schemas/ZonalValiditySummary"
          }
        }
      },
      "AvailableFulfillmentMethod": {
        "title": "AvailableFulfillmentMethod",
        "type": "object",
        "description": "Describes which fulfilmentMethods are available for an Offer,",
        "properties": {
          "id": {
            "type": "string",
            "description": "NeTEx standard"
          },
          "version": {
            "type": "string",
            "description": "NeTEx standard"
          },
          "distributionRights": {
            "type": "array",
            "x-isRequiredArray": true,
            "items": {
              "$ref": "#/components/schemas/DistributionRightsEnum"
            },
            "description": "Says what the distribution channel is allowed to do with this offer"
          }
        },
        "required": [
          "id",
          "version"
        ]
      },
      "GeographicalValidityCovered": {
        "title": "GeographicalValidityCovered",
        "type": "object",
        "description": "Describes the geographical validity covered by the recommendation.",
        "properties": {
          "serviceJourneys": {
            "type": "array",
            "description": "The service journeys this geographical validity applies to.",
            "x-isRequiredArray": true,
            "items": {
              "type": "string"
            }
          },
          "pointToPointValidity": {
            "$ref": "#/components/schemas/PointToPointValidity"
          },
          "zonalValidity": {
            "$ref": "#/components/schemas/ZonalValiditySummary"
          }
        }
      },
      "ZonalValidity": {
        "title": "ZonalValidity",
        "type": "object",
        "properties": {
          "zones": {
            "deprecated": true,
            "type": "array",
            "description": "Reference to a zone. All zones in the list are valid.",
            "x-isRequiredArray": true,
            "items": {
              "type": "string"
            }
          },
          "fareZones": {
            "type": "array",
            "x-isRequiredArray": true,
            "items": {
              "type": "string"
            }
          },
          "groupOfTariffZones": {
            "deprecated": true,
            "type": "array",
            "description": "Reference to a group of tariff zones. All zones in the group are valid.",
            "items": {
              "type": "string"
            }
          },
          "namedGroupOfTariffZones": {
            "type": "array",
            "description": "Reference to a named group of tariff zones. All zones in the group are valid.",
            "items": {
              "$ref": "#/components/schemas/LocalizedNamedReference"
            }
          }
        },
        "required": [
          "zones",
          "fareZones"
        ],
        "description": "Describes zones where a product is valid."
      },
      "ZonalValiditySummary": {
        "title": "ZonalValiditySummary",
        "type": "object",
        "properties": {
          "zones": {
            "deprecated": true,
            "type": "array",
            "description": "Reference to a zone. All zones in the list are valid.",
            "x-isRequiredArray": true,
            "items": {
              "type": "string"
            }
          },
          "fareZones": {
            "type": "array",
            "x-isRequiredArray": true,
            "items": {
              "type": "string"
            }
          },
          "groupOfTariffZones": {
            "deprecated": true,
            "type": "array",
            "description": "Reference to a group of tariff zones. All zones in the group are valid.",
            "items": {
              "type": "string"
            }
          },
          "namedGroupOfTariffZones": {
            "type": "array",
            "description": "Reference to a named group of tariff zones. All zones in the group are valid.",
            "items": {
              "$ref": "#/components/schemas/NamedReference"
            }
          }
        },
        "required": [
          "zones",
          "fareZones"
        ],
        "description": "Describes zones where a product is valid."
      },
      "NamedReference": {
        "type": "object",
        "description": "A simple reference with id and name",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["id", "name"]
      },

      "GroupConfig": {
        "title": "GroupConfig",
        "type": "object",
        "properties": {
          "numberOfCompartments": {
            "type": "integer",
            "description": "Number of compartments to group travellers in. If we are unable to fit the given travellers in the specified amount of compartments, no offer will be returned."
          }
        },
        "required": [
          "numberOfCompartments"
        ],
        "description": "A configuration of how to group travellers in offers."
      },
      "RefType": {
        "title": "RefType",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "version"
        ]
      },
      "CustomerRef": {
        "title": "CustomerRef",
        "type": "object",
        "properties": {
          "accountBasedTicketingCustomerRef": {
            "type": "string",
            "description": "Reference to the account id within the account based ticketing module."
          }
        },
        "description": "Contains enough information about a customer to look up transaction history."
      },
      "PlaceInJourneySpec": {
        "title": "PlaceInJourneySpec",
        "type": "object",
        "properties": {
          "stopPlace": {
            "$ref": "#/components/schemas/StopPlace"
          },
          "zoneId": {
            "deprecated": true,
            "type": "string"
          },
          "fareZoneId": {
            "type": "string"
          }
        },
        "description": "Identify zone or stopPlace in a journeySpec"
      },
      "JourneySpec": {
        "title": "JourneySpec",
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time",
            "example": "2020-05-13T07:19:30.389Z"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "example": "2020-05-13T09:19:30.389Z"
          },
          "operator": {
            "type": "string",
            "description": "NeTEx-id of Operator.",
            "example": "RUT:Operator:210"
          },
          "authority": {
            "type": "string",
            "description": "NeTEx-id of authority.",
            "example": "ENT:Authority:ENT"
          },
          "line": {
            "type": "string",
            "description": "NeTEx-id of line",
            "example": "GJB:Line:R30"
          },
          "mode": {
            "$ref": "#/components/schemas/TransportModeEnum"
          },
          "transportSubmode": {
            "$ref": "#/components/schemas/TransportSubModeEnum"
          },
          "placesInJourney": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaceInJourneySpec"
            }
          }
        },
        "description": "Collection of attributes that characterize a journey."
      },
      "ExplainInfo": {
        "title": "ExplainInfo",
        "type": "object",
        "x-explain": null,
        "properties": {
          "explainNodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExplainNode"
            }
          },
          "explainCapacity": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExplainCapacity"
            }
          }
        },
        "description": "Container for some debug information for the result. Only returned if ExplainSpecification was set in the request."
      },
      "ExplainCondition": {
        "title": "ExplainCondition",
        "type": "object",
        "x-explain": null,
        "description": "Information from an evaluated condition in product-configuration",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the condition parameter"
          },
          "valid": {
            "type": "boolean",
            "description": "Is the condition valid or not"
          },
          "conditionType": {
            "type": "string",
            "description": "Can be And, Or, ZoneParameter etc."
          },
          "message": {
            "type": "string",
            "description": "A message describing why the condition failed"
          },
          "comparisonOperatorVariant": {
            "type": "string",
            "description": "Values can be A or E, for old or new operator implementation, respectively."
          },
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperatorEnum"
          },
          "logicalOperator": {
            "$ref": "#/components/schemas/LogicalOperatorEnum"
          },
          "values": {
            "type": "array",
            "x-isRequiredArray": true,
            "description": "Values from the condition to evaluated against",
            "items": {
              "type": "string"
            }
          },
          "travelScopeValues": {
            "type": "array",
            "x-isRequiredArray": true,
            "description": "Values from the travel scope search that the condition is evaluated against (i.e., the input)",
            "items": {
              "type": "string"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExplainCondition"
            }
          }
        },
        "required": [
          "id",
          "valid",
          "conditionType"
        ]
      },
      "ExplainChoice": {
        "title": "ExplainChoice",
        "type": "object",
        "x-explain": null,
        "description": "Information from an evaluated choice in product-configuration",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the choice"
          },
          "choiceType": {
            "type": "string",
            "description": "Can be UserProfile, GeographicalInterval etc."
          }
        },
        "required": [
          "id",
          "choiceType"
        ]
      },
      "ExplainNode": {
        "title": "ExplainNode",
        "type": "object",
        "x-explain": null,
        "description": "A node for with some debug information",
        "properties": {
          "id": {
            "type": "string",
            "description": "id of the object"
          },
          "version": {
            "type": "string",
            "description": "version of the object"
          },
          "reason": {
            "type": "string",
            "description": "The reason why this node was invalid in a human readable format"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message if the node was invalid due to an error"
          },
          "serviceJourneyIds": {
            "type": "array",
            "x-isRequiredArray": true,
            "description": "The service journeys the node was evaluated against",
            "items": {
              "type": "string"
            }
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExplainCondition"
            }
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExplainChoice"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExplainNode"
            }
          }
        },
        "required": [
          "id",
          "version",
          "reason"
        ]
      },
      "ExplainSpecification": {
        "title": "ExplainSpecification",
        "type": "object",
        "x-explain": null,
        "description": "Request object to specify what you expect to be returned and therefore want to debug",
        "properties": {
          "salesPackageIds": {
            "deprecated": true,
            "type": "array",
            "description": "The sales package ids you want to debug",
            "x-netextype": "SalesPackage",
            "items": {
              "type": "string"
            }
          },
          "fareProductIds": {
            "deprecated": true,
            "type": "array",
            "description": "The fare product ids you want to debug",
            "x-netextype": "PreassignedFareProduct",
            "items": {
              "type": "string"
            }
          },
          "ids": {
            "type": "array",
            "description": "The priceable ids you want to debug",
            "x-netextype": "(SalesPackage|PreassignedFareProduct|GroupTicket|SaleDiscountRight|SupplementProduct)",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ExplainCapacity": {
        "title": "ExplainCapacity",
        "type": "object",
        "x-explain": null,
        "description": "Capacity from seating and/or quotas",
        "properties": {
          "fareProductId": {
            "type": "string",
            "description": "ID of a FareProduct"
          },
          "datedServiceJourneyId": {
            "type": "string",
            "description": "ID of a DatedServiceJourney"
          },
          "capacity": {
            "type": "integer",
            "description": "Available capacity"
          },
          "status": {
            "$ref": "#/components/schemas/ReservationStatusEnum"
          },
          "origin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceEnum"
            }
          }
        },
        "required": [
          "fareProductId",
          "status",
          "origin"
        ]
      },
      "ReservationStatusEnum": {
        "type": "string",
        "title": "ReservationStatusEnum",
        "enum": [
          "OPEN",
          "CLOSED",
          "UNKNOWN"
        ],
        "x-explain": null,
        "description": "Status of the capacity"
      },
      "ServiceEnum": {
        "type": "string",
        "title": "ServiceEnum",
        "enum": [
          "PRODUCTS",
          "INVENTORY",
          "SEATING",
          "ENTUR_PLASS"
        ],
        "description": "Service providing the capacity"
      },
      "LogicalOperatorEnum": {
        "type": "string",
        "title": "LogicalOperatorEnum",
        "enum": [
          "AND",
          "OR",
          "XOR",
          "NOT",
          "NAND",
          "XNOR",
          "NOR"
        ],
        "description": "Logical operator"
      },
      "UsageTriggerEnum": {
        "type": "string",
        "title": "UsageTriggerEnum",
        "enum": [
          "ENROLMENT",
          "RESERVATION",
          "PURCHASE",
          "FULFILMENT",
          "ACTIVATION",
          "SPECIFIED_START_DATE",
          "START_OUTBOUND_RIDE",
          "END_OUTBOUND_RIDE",
          "START_RETURN_RIDE",
          "START_OF_PERIOD",
          "DAY_OFFSET_BEFORE_CALENDAR_PERIOD"
        ]
      },
      "UsageEndEnum": {
        "type": "string",
        "title": "UsageEndEnum",
        "enum": [
          "STANDARD_DURATION",
          "END_OF_CALENDAR_PERIOD",
          "END_OF_RIDE",
          "END_OF_TRIP",
          "END_OF_FARE_DAY",
          "END_OF_FARE_PERIOD",
          "PRODUCT_EXPIRY",
          "PROFILE_EXPIRY",
          "DEREGISTRATION",
          "OTHER",
          "NO_TEMPORAL_VALIDITY"
        ]
      },
      "ActivationMeansEnum": {
        "type": "string",
        "title": "ActivationMeansEnum",
        "enum": [
          "NONE_REQUIRED",
          "CHECK_IN",
          "USE_OF_VALIDATOR",
          "USE_OF_MOBILE_DEVICE",
          "AUTOMATIC_BY_TIME",
          "AUTOMATIC_BY_PROXIMITY",
          "OTHER"
        ]
      },
      "UsageStartConstraintTypeEnum": {
        "type": "string",
        "title": "UsageStartConstraintTypeEnum",
        "enum": [
          "VARIABLE",
          "FIXED",
          "FIXED_WINDOW"
        ]
      },
      "DistributionRightsEnum": {
        "type": "string",
        "title": "DistributionRightsEnum",
        "enum": [
          "NONE",
          "SELL",
          "REFUND",
          "EXCHANGE",
          "INFORM",
          "PRIVATE",
          "OTHER"
        ]
      },
      "SetSelectionEnum": {
        "type": "string",
        "title": "SetSelectionEnum",
        "enum": [
          "ONE_OF_ANY_ONE_SET",
          "ONE_OF_EACH_SET",
          "SOME_OF_ANY_SET",
          "ALL_OF_ONE_SET",
          "ALL_OF_ALL_SETS"
        ],
        "description": "Set selection type for a group containing multiple elements"
      },
      "ParameterSpecification": {
        "type": "object",
        "properties": {
          "specificationOf": {
            "type": "string",
            "description": "Specification of parameter id"
          },
          "specificParameterAssignment": {
            "$ref": "#/components/schemas/SpecificParameterAssignment"
          }
        }
      },
      "SpecificParameterAssignment": {
        "type": "object",
        "properties": {
          "typeOfAccessRightAssignmentRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "includesGroupingType": {
            "$ref": "#/components/schemas/LogicalOperatorEnum"
          },
          "validityParameterGroupingType": {
            "$ref": "#/components/schemas/LogicalOperatorEnum"
          },
          "limitationGroupingType": {
            "$ref": "#/components/schemas/LogicalOperatorEnum"
          },
          "validityParameterSetSelectionType": {
            "$ref": "#/components/schemas/SetSelectionEnum"
          },
          "limitations": {
            "description": "Limitations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Limitation"
            }
          },
          "validityParameters": {
            "description": "Validity parameters",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidityParameter"
            }
          },
          "includes": {
            "description": "Included SpecificParameterAssignments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecificParameterAssignment"
            }
          },
          "dynamicDistanceMatrixElement": {
            "$ref": "#/components/schemas/DynamicDistanceMatrixElement"
          },
          "distanceMatrixElementRef": {
            "$ref": "#/components/schemas/ObjectRef"
          }
        },
        "required": [
          "specificationOf"
        ]
      },
      "ObjectRef": {
        "type": "object",
        "description": "Object ref",
        "properties": {
          "ref": {
            "type": "string",
            "description": "object ref ref"
          },
          "version": {
            "type": "string",
            "description": "object ref version"
          }
        },
        "required": [
          "ref"
        ]
      },
      "Limitation": {
        "type": "object",
        "description": "Limitation object.",
        "properties": {
          "userProfileRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "usageValidityPeriod": {
            "$ref": "#/components/schemas/UsageValidityPeriod"
          },
          "usageValidityPeriodRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "groupTicket": {
            "$ref": "#/components/schemas/GroupTicket"
          }
        }
      },
      "ValidityParameter": {
        "type": "object",
        "description": "ValidityParameter object.",
        "properties": {
          "tariffZoneRef": {
            "deprecated": true,
            "$ref": "#/components/schemas/ObjectRef"
          },
          "fareZoneRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "groupOfTariffZonesRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "passengerSeatRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "serviceJourneyRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "datedServiceJourneyRef": {
            "description": "A reference to the dated service journey. In cases of replacement transport, this field will contain a reference to the original journey.",
            "$ref": "#/components/schemas/ObjectRef"
          }
        }
      },
      "DynamicDistanceMatrixElement": {
        "type": "object",
        "description": "DynamicDistanceMatrixElement type. In cases of replacement transport, these fields will contain values from the original journey.",
        "properties": {
          "id": {
            "type": "string",
            "description": "DynamicDistanceMatrixElement id"
          },
          "version": {
            "type": "string",
            "description": "DynamicDistanceMatrixElement version"
          },
          "startStopPointRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "startTariffZoneRef": {
            "deprecated": true,
            "$ref": "#/components/schemas/ObjectRef"
          },
          "startFareZoneRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "endStopPointRef": {
            "$ref": "#/components/schemas/ObjectRef"
          },
          "endTariffZoneRef": {
            "deprecated": true,
            "$ref": "#/components/schemas/ObjectRef"
          },
          "endFareZoneRef": {
            "$ref": "#/components/schemas/ObjectRef"
          }
        },
        "required": [
          "id",
          "version"
        ]
      },
      "UsageValidityPeriod": {
        "type": "object",
        "description": "Usage validity period type",
        "properties": {
          "id": {
            "type": "string",
            "description": "UsageValidityPeriod id"
          },
          "version": {
            "type": "string",
            "description": "UsageValidityPeriod version"
          },
          "startDateTime": {
            "type": "string",
            "description": "StartDateTime",
            "format": "date-time",
            "example": "2020-05-13T07:19:30.389Z"
          },
          "endDateTime": {
            "type": "string",
            "description": "EndDate",
            "format": "date-time",
            "example": "2020-05-13T07:19:30.389Z"
          },
          "usageTrigger": {
            "$ref": "#/components/schemas/UsageTriggerEnum"
          },
          "usageEnd": {
            "$ref": "#/components/schemas/UsageEndEnum"
          },
          "activationMeans": {
            "type": "array",
            "description": "Activation Means. Describes how a product can be activated.",
            "items": {
              "$ref": "#/components/schemas/ActivationMeansEnum"
            }
          },
          "standardDuration": {
            "type": "string",
            "description": "Standard duration. Represented as a string formatted according to ISO-8601",
            "example": "PT1H",
            "format": "duration"
          },
          "usageStartConstraintType": {
            "$ref": "#/components/schemas/UsageStartConstraintTypeEnum"
          },
          "usageValidityType": {
            "$ref": "#/components/schemas/UsageValidityTypeEnum"
          }
        },
        "required": [
          "id",
          "version"
        ]
      },
      "GroupTicket": {
        "type": "object",
        "description": "Group ticket limitation",
        "properties": {
          "derivedFromObjectRef": {
            "type": "string",
            "description": "Group ticket netex id."
          },
          "derivedFromVersionRef": {
            "type": "string",
            "description": "Group ticket version"
          },
          "companionProfiles": {
            "type": "array",
            "description": "Reference to companion profiles in group",
            "items": {
              "$ref": "#/components/schemas/CompanionProfiles"
            }
          }
        },
        "required": [
          "companionProfiles",
          "derivedFromObjectRef"
        ]
      },
      "CompanionProfiles": {
        "type": "object",
        "description": "Companion Profiles and number under group ticket limitation",
        "properties": {
          "minimumNumberOfPersons": {
            "type": "integer",
            "description": "Minimum number of persons under given user profile that this ticket is valid for",
            "example": 2
          },
          "maximumNumberOfPersons": {
            "type": "integer",
            "description": "Maximum number of persons under given user profile that this ticket is valid for",
            "example": 2
          },
          "userProfileRef": {
            "$ref": "#/components/schemas/ObjectRef"
          }
        },
        "required": [
          "minimumNumberOfPersons",
          "maximumNumberOfPersons"
        ]
      },
      "UsageValidityTypeEnum": {
        "type": "string",
        "title": "UsageValidityTypeEnum",
        "enum": [
          "SINGLE_TRIP",
          "RETURN_TRIP",
          "CARNET",
          "DAY_PASS",
          "WEEKLY_PASS",
          "WEEKEND_PASS",
          "MONTHLY_PASS",
          "SEASON_TICKET",
          "PROFILE_MEMBERSHIP",
          "OPEN_ENDED",
          "OTHER"
        ]
      }
    },
    "securitySchemes": {
      "oauth2-partner-production": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://partner.production.entur.org/oauth/token",
            "scopes": {}
          }
        },
        "description": "For more information, see https://developer.entur.org/pages-offers-docs-intro"
      },
      "oauth2-internal-production": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://internal.production.entur.org/oauth/token",
            "scopes": {}
          }
        },
        "description": "For more information, see https://developer.entur.org/pages-offers-docs-intro"
      },
      "oauth2-partner-staging": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://partner.staging.entur.org/oauth/token",
            "scopes": {}
          }
        },
        "description": "For more information, see https://developer.entur.org/pages-offers-docs-intro"
      },
      "oauth2-internal-staging": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://internal.staging.entur.org/oauth/token",
            "scopes": {}
          }
        },
        "description": "For more information, see https://developer.entur.org/pages-offers-docs-intro"
      },
      "oauth2-partner-dev": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://partner.dev.entur.org/oauth/token",
            "scopes": {}
          }
        },
        "description": "For more information, see https://developer.entur.org/pages-offers-docs-intro"
      },
      "oauth2-internal-dev": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://internal.dev.entur.org/oauth/token",
            "scopes": {}
          }
        },
        "description": "Used in dev environment by internal applications to get tokens. For more information, see https://developer.entur.org/pages-offers-docs-intro"
      }
    }
  },
  "security": [
    {
      "oauth2-partner-production": [],
      "oauth2-internal-production": [],
      "oauth2-partner-staging": [],
      "oauth2-internal-staging": [],
      "oauth2-partner-dev": [],
      "oauth2-internal-dev": []
    }
  ]
}
