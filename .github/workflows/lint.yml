name: Lint OpenAPI specs

on:
  workflow_call:
    inputs:
      spec:
        description: "OpenAPI specs to lint, as a glob pattern."
        type: string
        default: "specs/*.json"
      artifact:
        description: "OpenAPI specs to lint, as a Github artifact glob pattern."
        type: string
      artifact_contents:
        description: "Glob pattern inside artifacts to include in linting, only used if artifact is provided."
        type: string
        default: "*"
      upload_to_bucket:
        description: "If true, will upload the spec(s) to a GCS bucket for analytics."
        type: boolean
        default: true
      fail_on_lint_error:
        description: "If true, a lint error will fail the workflow."
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write

jobs:
  validate-input:
    name: Validate input
    runs-on: ubuntu-latest
    steps:
      - name: Validate inputs
        run: |
          # Ensure not both inputs are empty.
          if [ -z "${{ inputs.artifact }}" ] && [ -z "${{ inputs.spec }}" ]; then            
            echo "Error: Exactly one of spec OR artifact is required."
            exit 1
          fi          

          # Ensure not both inputs are provided.
          if [ -n "${{ inputs.artifact }}" ] && [ -n "${{ inputs.spec }}" ] && [ "${{ inputs.spec }}" != "specs/*.json" ]; then            
            echo "Error: Both spec and artifact were provided. Please provide only one."
            exit 1
          fi
  lint:
    name: OpenAPI Lint
    runs-on: ubuntu-latest
    needs: validate-input
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository (if spec provided)
        if: ${{ inputs.artifact == '' }}
        uses: actions/checkout@v4
      - name: Download artifact (if artifact provided)
        if: ${{ inputs.artifact != '' }}
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifact }}
          path: /tmp/artifacts
          merge-multiple: true #Downloads all artifacts into /tmp/artifacts, without subdirectories
      - name: Checkout guidelines
        uses: actions/checkout@v4
        with:
          repository: entur/api-guidelines
          ref: v1.0.1
          path: rulesets
          sparse-checkout: |
            .spectral.yml
      - name: Install Spectral
        run: npm install -g @stoplight/spectral-cli
      - name: Lint OpenAPI
        run: |
          if [ -n "${{ inputs.artifact }}" ]; then
            spec_glob="/tmp/artifacts/${{ inputs.artifact_contents }}"
          else
            spec_glob="${{ inputs.spec }}"
          fi          

          #This is needed, because calling spectral with a glob that does not match any files will succeed, which is not what we want.
          if ! compgen -G $spec_glob > /dev/null; then
            echo "No file matches '$spec_glob'"
            exit 1
          fi            

          spectral lint $spec_glob --ruleset rulesets/.spectral.yml -f html -o lint-report.html || test "${{ inputs.fail_on_lint_error }}" = "false"
      - name: Save lint report to artifact storage
        uses: actions/upload-artifact@v4
        with:
          name: lint-report.html
          path: lint-report.html
          retention-days: 30

  upload-to-bucket:
    name: Upload to bucket
    if: ${{ inputs.upload_to_bucket == true }}
    continue-on-error: true
    needs: validate-input
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (if spec provided)
        if: ${{ inputs.artifact == '' }}
        uses: actions/checkout@v4
      - name: Download artifact (if artifact provided)
        if: ${{ inputs.artifact != '' }}
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifact }}
          path: /tmp/artifacts
          merge-multiple: true
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.ENTUR_API_DATA_SA }}"
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Copy specs to temporary directory
        run: |
          mkdir -p /tmp/specs

          if [ -z "${{ inputs.artifact }}" ]; then            
            cp ${{ inputs.spec }} /tmp/specs
          else
            #Since gcloud storage rsync does not support GLOB, copy files matching artifact_contents to /tmp/specs for upload 
            cp /tmp/artifacts/${{ inputs.artifact_contents }} /tmp/specs
          fi
      - name: Upload specs to GCS
        run: |
          echo "Starting to sync files in /tmp/specs/ to GCS Bucket to path /${GITHUB_REPOSITORY#*/}"
          gcloud storage rsync /tmp/specs/ "gs://ent-gcs-api-specs-prd-001/${GITHUB_REPOSITORY#*/}"
