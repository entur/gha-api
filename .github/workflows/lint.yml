name: Lint OpenAPI specs

on:
  workflow_call:
    inputs:
      file_glob:
        description: "OpenAPI specs to lint, as a glob pattern."
        type: string
      artifact_glob:
        description: "OpenAPI specs to lint, as a Github artifact glob pattern."
        type: string
      upload_to_bucket:
        description: "If true, will upload the spec(s) to a GCS bucket for analytics"
        type: boolean
        default: true
      fail_on_lint_error:
        description: "If true, a lint error will fail the workflow."
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write

jobs:
  validate-input:
    name: Validate input
    runs-on: ubuntu-latest
    steps:
      - name: Validate inputs
        run: |
          # Ensure at least one input is provided.
          if [ -z "${{ inputs.artifact_glob }}" ] && [ -z "${{ inputs.file_glob }}" ]; then
            echo "Error: Neither artifact_glob nor file_glob is provided."
            exit 1
          fi           
          
          # Ensure not both inputs are provided.
          if [ -n "${{ inputs.artifact_glob }}" ] && [ -n "${{ inputs.file_glob }}" ]; then            
            echo "Error: Both file_glob and artifact_glob were provided. Please provide only one."
            exit 1
          fi
  lint:
    name: OpenAPI Lint
    runs-on: ubuntu-latest
    needs: validate-input
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository (if file_glob provided)
        if: ${{ inputs.file_glob != '' }}
        uses: actions/checkout@v4
      - name: Download artifact (if artifact_glob provided)
        if: ${{ inputs.artifact_glob != '' }}
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifact_glob }}
          #merge-multiple: ?
      - name: Checkout guidelines
        uses: actions/checkout@v4
        with:
          repository: entur/api-guidelines
          ref: v0.1.0
          path: rulesets
          sparse-checkout: |
            .spectral.yml
      - name: Install Spectral
        run: npm install -g @stoplight/spectral-cli
      - name: Lint OpenAPI
        run: |          
          if [ -n "${{ inputs.artifact_glob }}" ]; then
            spec_glob="${{ inputs.artifact_glob }}"
          else
            spec_glob="${{ inputs.file_glob }}"
          fi
          
          ls -la
          cat $spec_glob          
          echo linting $spec_glob ...                        
          spectral lint $spec_glob --ruleset rulesets/.spectral.yml -f pretty || test "${{ inputs.fail_on_lint_error }}" = "false"

  upload-to-bucket:
    name: Upload to bucket
    if: ${{ inputs.upload_to_bucket == true }}
    continue-on-error: true
    needs: validate-input
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (if file_glob provided)
        if: ${{ inputs.file_glob != '' }}
        uses: actions/checkout@v4
      - name: Download artifact (if artifact_glob provided)
        if: ${{ inputs.artifact_glob != '' }}
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifact_glob }}
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.ENTUR_API_DATA_SA }}"
      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v2
      - name: "copy specs to temporary directory"
        run: |
          if [ -n "${{ inputs.artifact_glob }}" ]; then
            spec_glob="${{ inputs.artifact_glob }}"
          else
            spec_glob="${{ inputs.file_glob }}"
          fi            
          mkdir -p /tmp/specs
          cp $spec_glob /tmp/specs/
      - name: Upload specs to GCS
        run: |
          echo "Starting to sync files to GCS Bucket to /${GITHUB_REPOSITORY#*/}"
          gcloud storage rsync /tmp/specs/ "gs://ent-gcs-api-specs-prd-001/${GITHUB_REPOSITORY#*/}"
